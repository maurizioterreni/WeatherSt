{"version":3,"sources":["./node_modules/moment/locale ^\\.\\/.*$","./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/conversion/ConversionFactor.service.ts","./src/app/conversion/createConversionFactor/createConversionFactor.component.css","./src/app/conversion/createConversionFactor/createConversionFactor.component.html","./src/app/conversion/createConversionFactor/createConversionFactor.component.ts","./src/app/dialog/login/authentication.service.ts","./src/app/dialog/login/login.component.ts","./src/app/dialog/login/login.css","./src/app/dialog/login/login.html","./src/app/dialog/login/registration.service.ts","./src/app/dialog/maps/dialog-map.css","./src/app/dialog/maps/dialog-map.html","./src/app/dialog/maps/dialog.maps.component.ts","./src/app/dialog/register/register.component.html","./src/app/dialog/register/register.component.ts","./src/app/footer/footer.component.css","./src/app/footer/footer.component.html","./src/app/footer/footer.component.ts","./src/app/header/header.component.css","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/material.module.ts","./src/app/measure/measure.service.ts","./src/app/sensor/createSensor/createSensor.component.css","./src/app/sensor/createSensor/createSensor.component.html","./src/app/sensor/createSensor/createSensor.component.ts","./src/app/sensor/createSensorKnowledge/createSensorKnowledge.component.css","./src/app/sensor/createSensorKnowledge/createSensorKnowledge.component.html","./src/app/sensor/createSensorKnowledge/createSensorKnowledge.component.ts","./src/app/sensor/createUnitKnowledge/createUnitKnowledge.component.css","./src/app/sensor/createUnitKnowledge/createUnitKnowledge.component.html","./src/app/sensor/createUnitKnowledge/createUnitKnowledge.component.ts","./src/app/sensor/gauge/humidity/humidityGauge.component.ts","./src/app/sensor/gauge/humidity/humidityGauge.css","./src/app/sensor/gauge/humidity/humidityGauge.html","./src/app/sensor/gauge/pressure/pressureGauge.component.ts","./src/app/sensor/gauge/pressure/pressureGauge.css","./src/app/sensor/gauge/pressure/pressureGauge.html","./src/app/sensor/gauge/rain/rainGauge.component.ts","./src/app/sensor/gauge/rain/rainGauge.css","./src/app/sensor/gauge/rain/rainGauge.html","./src/app/sensor/gauge/temperature/temperatureGauge.component.ts","./src/app/sensor/gauge/temperature/temperatureGauge.css","./src/app/sensor/gauge/temperature/temperatureGauge.html","./src/app/sensor/gauge/uv/uvGauge.component.ts","./src/app/sensor/gauge/uv/uvGauge.css","./src/app/sensor/gauge/uv/uvGauge.html","./src/app/sensor/gauge/windDirection/windDirectionGauge.component.ts","./src/app/sensor/gauge/windDirection/windDirectionGauge.css","./src/app/sensor/gauge/windDirection/windDirectionGauge.html","./src/app/sensor/gauge/windspeed/windspeedGauge.component.ts","./src/app/sensor/gauge/windspeed/windspeedGauge.css","./src/app/sensor/gauge/windspeed/windspeedGauge.html","./src/app/sensor/sensor.component.ts","./src/app/sensor/sensor.css","./src/app/sensor/sensor.html","./src/app/sensor/sensor.service.ts","./src/app/sensor/sheet/delete/dialogDeleteSensor.component.ts","./src/app/sensor/sheet/delete/dialogDeleteSensor.css","./src/app/sensor/sheet/delete/dialogDeleteSensor.html","./src/app/sensor/sheet/edit/dialogEditSensor.component.ts","./src/app/sensor/sheet/edit/dialogEditSensor.css","./src/app/sensor/sheet/edit/dialogEditSensor.html","./src/app/user/user.service.ts","./src/app/weatherStation/createWeatherStation/createWeatherStation.component.css","./src/app/weatherStation/createWeatherStation/createWeatherStation.component.html","./src/app/weatherStation/createWeatherStation/createWeatherStation.component.ts","./src/app/weatherStation/weather-station.css","./src/app/weatherStation/weather-station.html","./src/app/weatherStation/weather-station.service.ts","./src/app/weatherStation/weatherStation.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = ./node_modules/moment/locale recursive ^\\.\\/.*$\n// module chunks = main","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"/* Add application styles & imports to this file! */\\nbody {\\n\\tfont-family: Lato;\\n\\tpadding: 0;\\n\\tmargin: 0;\\n}\\n.fill-space {\\n\\t-webkit-box-flex: 1;\\n\\t    -ms-flex: 1 1 auto;\\n\\t        flex: 1 1 auto;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\n\\n\\n<router-outlet></router-outlet>\\n\\n<app-footer></app-footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { WeatherStationService } from './weatherStation/weather-station.service';\nimport { WeatherStation } from './weatherStation/weatherstation';\nimport { Component, Inject } from '@angular/core';\n\nimport { Http , Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { Router } from '@angular/router';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material';\nimport {DialogMaps} from './dialog/maps/dialog.maps.component';\nimport { SensorService } from './sensor/sensor.service';\n\n\n@Component ({\n   selector: 'app-root',\n   templateUrl: 'app.component.html',\n   styleUrls: ['app.component.css'],\n   providers: [WeatherStationService, SensorService]\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { AppMaterialModules } from './material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { DialogMaps } from './dialog/maps/dialog.maps.component';\nimport { WeatherStationComponent } from './weatherStation/weatherStation.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SensorComponent } from './sensor/sensor.component';\nimport { DialogDeleteSensor } from './sensor/sheet/delete/dialogDeleteSensor.component';\nimport { DialogEditSensor } from './sensor/sheet/edit/dialogEditSensor.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TemperatureGaugeComponent } from './sensor/gauge/temperature/temperatureGauge.component';\nimport { WindspeedGaugeComponent } from './sensor/gauge/windspeed/windspeedGauge.component';\nimport { WindDirectionGaugeComponent } from './sensor/gauge/windDirection/windDirectionGauge.component';\nimport { UVGaugeComponent } from './sensor/gauge/uv/uvGauge.component';\nimport { RainGaugeComponent } from './sensor/gauge/rain/rainGauge.component';\nimport { PressureGaugeComponent } from './sensor/gauge/pressure/pressureGauge.component';\nimport { HumidityGaugeComponent } from './sensor/gauge/humidity/humidityGauge.component';\nimport { LoginComponent } from './dialog/login/login.component';\nimport { RegisterComponent } from './dialog/register/register.component';\nimport { CreateSensorComponent } from './sensor/createSensor/createSensor.component';\nimport { CreateWeatherStationComponent } from './weatherStation/createWeatherStation/createWeatherStation.component';\nimport { CreateSensorKnowledgeComponent } from './sensor/createSensorKnowledge/createSensorKnowledge.component';\nimport { CreateUnitKnowledgeComponent } from './sensor/createUnitKnowledge/createUnitKnowledge.component';\nimport { CreateConversionFactorComponent } from './conversion/createConversionFactor/createConversionFactor.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nconst appRoute: Routes = [\n      {path: 'sensor/', component: SensorComponent},\n      {path: '', component: WeatherStationComponent},\n      { path: 'login', component: LoginComponent },\n      { path: 'createSensor', component: CreateSensorComponent },\n      { path: 'createWeatherStation', component: CreateWeatherStationComponent },\n      { path: 'createSensorKnowledgeComponent', component: CreateSensorKnowledgeComponent },\n      { path: 'createUnitKnowledgeComponent', component: CreateUnitKnowledgeComponent },\n      { path: 'createConversionFactor', component: CreateConversionFactorComponent },\n      { path: 'register', component: RegisterComponent },\n      // otherwise redirect to home\n      { path: '**', redirectTo: '' }];\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent, CreateSensorComponent, FooterComponent, DialogMaps,DialogDeleteSensor,\n        DialogEditSensor ,SensorComponent, WeatherStationComponent,\n        TemperatureGaugeComponent, PressureGaugeComponent, UVGaugeComponent, HumidityGaugeComponent,\n        RainGaugeComponent, WindspeedGaugeComponent, WindDirectionGaugeComponent, LoginComponent,\n        RegisterComponent, CreateWeatherStationComponent, CreateSensorKnowledgeComponent, CreateUnitKnowledgeComponent,\n        CreateConversionFactorComponent],\n  imports: [BrowserModule, HttpClientModule, BrowserAnimationsModule, AppMaterialModules, FlexLayoutModule,FormsModule,\n    ReactiveFormsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyB9t2Ki03ItPGImdj2sro-hMyBcQEsnloc'\n    }),\n    RouterModule.forRoot(appRoute)],\n  providers: [] ,\n  entryComponents: [DialogMaps,DialogDeleteSensor,DialogEditSensor],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { ConversionFactor } from './ConversionFactor';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { User } from '../user/user';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n@Injectable()\nexport class ConversionFactorService {\n  constructor(private http: HttpClient) { }\n   getConversionFactorByFromId(unitId: string): Observable<ConversionFactor[]> {\n\n      const headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('fromUnitId', unitId);\n\n      return this.http.get(\"http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/conversion/getAllFromUnit\",  {headers} )\n        .map((response) => {\n          let conv = <ConversionFactor[]> response;\n          return conv;\n\n        });\n   }\n\n   createConversionFactor(fronUnitId: string, toUnitId: string, conversionMul:string,conversionAdd:string, user: User) {\n       const headers = new HttpHeaders()\n         .set('Content-Type', 'application/json')\n         .set('token', '' + user.token)\n         .set('fronUnitId', '' + fronUnitId)\n         .set('toUnitId', '' + toUnitId)\n         .set('conversionMul', '' + conversionMul)\n         .set('conversionAdd', '' + conversionAdd);\n\n\n       return this.http.post<any>('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/conversion/', JSON.stringify(null),{headers});\n   }\n\n   editSensor(sensorId: string,sensorTypeId: string, user: User) {\n      const headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('token', '' + user.token)\n        .set('sensorId', '' + sensorId)\n        .set('sensorKnowledgeId', '' + sensorTypeId);\n\n      return this.http.put(\"http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor/\",  {headers} );\n\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/conversion/ConversionFactor.service.ts","module.exports = \".create-conversion-factor-form{\\n  min-width: 100px;\\n  max-width: 600px;\\n  width: 100%;\\n}\\n\\n.create-conversion-factor-form-width{\\n  width: 100%;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n\\n.create-formula{\\n  \\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/conversion/createConversionFactor/createConversionFactor.component.css\n// module id = ./src/app/conversion/createConversionFactor/createConversionFactor.component.css\n// module chunks = main","module.exports = \"<mat-dialog-content class=\\\"accent-color\\\">\\n  <h1>Create conversion factor</h1>\\n  <form class=\\\"create-conversion-factor-form\\\" (submit)=\\\"createConversionFactor($event)\\\">\\n    <mat-form-field class=\\\"create-conversion-factor-form-width\\\">\\n      <mat-select placeholder=\\\"Chose UnitKnowledge\\\" [(ngModel)]=\\\"selectedToUnitKnowledge\\\"  name=\\\"-1\\\">\\n        <mat-option *ngFor=\\\"let unit of unitKnowledges\\\" [value]=\\\"unit.id\\\">\\n          {{ unit.name }} [{{unit.symbol}}]\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"create-conversion-factor-form-width\\\">\\n      <mat-select placeholder=\\\"Chose UnitKnowledge\\\" [(ngModel)]=\\\"selectedFromUnitKnowledge\\\"  name=\\\"-1\\\">\\n        <mat-option *ngFor=\\\"let unit of unitKnowledges\\\" [value]=\\\"unit.id\\\">\\n          {{ unit.name }} [{{unit.symbol}}]\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div *ngIf=\\\"selectedToUnitKnowledge && selectedFromUnitKnowledge\\\"  class=\\\"create-formula\\\">\\n      <span>{{getSymbol(selectedToUnitKnowledge)}} = ( {{getSymbol(selectedFromUnitKnowledge)}} * </span>\\n      <mat-form-field >\\n        <input matInput #Mul placeholder=\\\"1\\\" (keyup.enter)=\\\"writeMul(Mul.value)\\\" (blur)=\\\"writeMul(Mul.value)\\\" maxlength=\\\"50\\\">\\n      </mat-form-field>\\n      <span>) + </span>\\n      <mat-form-field>\\n        <input matInput #Add placeholder=\\\"0\\\" (keyup.enter)=\\\"writeAdd(Add.value)\\\" (blur)=\\\"writeAdd(Add.value)\\\" maxlength=\\\"50\\\">\\n      </mat-form-field>\\n      <span>; </span>\\n    </div>\\n    <div class=\\\"create-conversion-factor-form-width\\\">\\n      <button mat-button>Create</button>\\n    </div>\\n  </form>\\n</mat-dialog-content>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/conversion/createConversionFactor/createConversionFactor.component.html\n// module id = ./src/app/conversion/createConversionFactor/createConversionFactor.component.html\n// module chunks = main","/**\n * New typescript file\n */\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport { SensorService } from '../../sensor/sensor.service';\nimport { UnitKnowledge } from '../../sensor/createUnitKnowledge/unitKnowledge';\nimport { ConversionFactorService } from '../ConversionFactor.service';\nimport { User } from '../../user/user';\n\n\n\n@Component({\n  selector: 'app-createConversionFactor',\n  templateUrl: 'createConversionFactor.component.html',\n  styleUrls: ['createConversionFactor.component.css'],\n  providers: [SensorService, ConversionFactorService]\n})\nexport class CreateConversionFactorComponent  implements OnInit {\n  private user : User;\n  // -----------------------------------------------------------------------//\n  unitKnowledges: UnitKnowledge[];\n  // -----------------------------------------------------------------------//\n  selectedToUnitKnowledge: string;\n  selectedFromUnitKnowledge: string;\n\n  add: string;\n  mul: string;\n\n  constructor(private _sensorService: SensorService, private conversionFactorService: ConversionFactorService,\n    public dialogRef: MatDialogRef<CreateConversionFactorComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this._sensorService.getAllUnitKnowledge()\n      .subscribe(unitKnowledges => this.unitKnowledges = unitKnowledges);\n  }\n\n  createConversionFactor(e){\n    this.conversionFactorService.createConversionFactor(\n            this.selectedFromUnitKnowledge, this.selectedToUnitKnowledge, this.mul, this.add, this.user)\n              .subscribe(() => {\n                      this.dialogRef.close();\n                  },\n                  err => {\n                    console.log(err);\n          //openSnackBar(\"User or Password wrong\", \"undo\");\n\n              });\n\n  }\n\n  writeAdd(str:string){\n    this.add = str;\n  }\n\n  writeMul(str:string){\n    this.mul = str;\n  }\n\n  getSymbol(id){\n    if(Number(id) > 0){\n      for (let i of this.unitKnowledges){\n        if(i.id == id)\n          return i.symbol;\n        }\n    }\n\n    return '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/conversion/createConversionFactor/createConversionFactor.component.ts","import { Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class AuthenticationService {\n    constructor(private http: HttpClient) { }\n\n    login(username: string, password: string) {\n        const headers = new HttpHeaders()\n          .set('Content-Type', 'application/json')\n          .set('Accept', 'application/json');\n\n        return this.http.post<any>('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/login', JSON.stringify({ username: username, password: password }), {headers})\n            .map(user => {\n                // login successful if there's a jwt token in the response\n              if (user){\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\n              }\n\n              return user;\n            });\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        sessionStorage.removeItem('currentUser');\n      //  this.router.navigate('');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialog/login/authentication.service.ts","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef,MAT_DIALOG_DATA } from '@angular/material';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { AuthenticationService } from './authentication.service';\nimport { RegistrationService } from './registration.service';\nimport {MatSnackBar} from '@angular/material';\n\n\n\n\n@Component({\n    moduleId: 'app-login',\n    templateUrl: 'login.html',\n    styleUrls: ['login.css'],\n    providers: [AuthenticationService,RegistrationService]\n})\n\nexport class LoginComponent implements OnInit {\n\n  hide = true;\n\n  constructor(\n          private authenticationService: AuthenticationService,\n          private registrationService: RegistrationService,\n          public dialogRef: MatDialogRef<LoginComponent>,\n          public snackBar: MatSnackBar) { }\n    ngOnInit() {\n      // reset login status\n        this.authenticationService.logout();\n\n        // get return url from route parameters or default to '/'\n    }\n\n    loginUser(e) {\n  \t   e.preventDefault();\n\n  \t   var username = e.target.elements[0].value;\n  \t   var password = e.target.elements[1].value;\n\n       this.authenticationService.login(username, password)\n          .subscribe(\n            res => {\n                this.dialogRef.close();\n        },\n          err => {\n            console.log('ERROR');\n            //openSnackBar(\"User or Password wrong\", \"undo\");\n            this.snackBar.open(\"User or Password wrong\", null, {\n              duration: 3000,\n            });\n\n          });\n    }\n\n    registrationUser(e){\n      var username = e.target.elements[0].value;\n      var password = e.target.elements[1].value;\n      var email = e.target.elements[2].value;\n\n      console.log('registration');\n\n      this.registrationService.registration(username, password, email)\n         .subscribe(\n             data => {\n                 this.dialogRef.close();\n             },\n             error => {\n               console.log('ERROR');\n               //openSnackBar(\"User or Password wrong\", \"undo\");\n               this.snackBar.open(\"User or Password wrong\", null, {\n                 duration: 3000,\n               });\n      });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialog/login/login.component.ts","module.exports = \".login-form {\\n  min-width: 100px;\\n  max-width: 600px;\\n  width: 100%;\\n}\\n\\n.login-form-width {\\n  width: 100%;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n\\n.accent-color{\\n  padding: 30px;\\n}\\n\\n::ng-deep .mat-tab-labels{\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; /* align items in Main Axis */\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/login/login.css\n// module id = ./src/app/dialog/login/login.css\n// module chunks = main","module.exports = \"\\n<mat-tab-group>\\n  <mat-tab label=\\\"Sign in\\\">\\n    <mat-dialog-content class=\\\"accent-color\\\">\\n      <form class=\\\"login-form\\\" (submit)=\\\"loginUser($event)\\\">\\n        <mat-form-field class=\\\"login-form-width\\\">\\n          <input matInput placeholder=\\\"Enter your Username\\\">\\n        </mat-form-field>\\n        <mat-form-field class=\\\"login-form-width\\\">\\n          <input matInput placeholder=\\\"Enter your Password\\\"\\n                  [type]=\\\"hide ? 'password' : 'text'\\\">\\n          <mat-icon  matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n\\n        <div class=\\\"login-form-width\\\">\\n          <button mat-button>Sign in</button>\\n        </div>\\n      </form>\\n    </mat-dialog-content>\\n  </mat-tab>\\n  <mat-tab label=\\\"Sign up\\\">\\n    <mat-dialog-content class=\\\"accent-color\\\">\\n      <form class=\\\"registration-form\\\" (submit) = \\\"registrationUser($event)\\\">\\n        <mat-form-field class=\\\"login-form-width\\\">\\n          <input matInput placeholder=\\\"Enter Username\\\">\\n        </mat-form-field>\\n        <mat-form-field class=\\\"login-form-width\\\">\\n          <input matInput placeholder=\\\"Enter Password\\\"\\n                  [type]=\\\"hide ? 'password' : 'text'\\\">\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"login-form-width\\\">\\n          <input matInput placeholder=\\\"Enter Email\\\">\\n        </mat-form-field>\\n\\n        <div class=\\\"login-form-width\\\">\\n          <button mat-button>Sign up</button>\\n        </div>\\n      </form>\\n    </mat-dialog-content>\\n  </mat-tab>\\n</mat-tab-group>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/login/login.html\n// module id = ./src/app/dialog/login/login.html\n// module chunks = main","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class RegistrationService {\n    constructor(private http: HttpClient) { }\n\n    registration(username: string, password: string, email: string) {\n        const headers = new HttpHeaders()\n          .set('Content-Type', 'application/json')\n          .set('Accept', 'application/json');\n\n        return this.http.post<any>('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/registration', JSON.stringify({ username: username, password: password , email: email}), {headers})\n            .map(user => {\n                // login successful if there's a jwt token in the response\n                if (user && user.token) {\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\n                    sessionStorage.setItem('currentUser', JSON.stringify(user));\n                }\n\n                return user;\n            });\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        sessionStorage.removeItem('currentUser');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialog/login/registration.service.ts","module.exports = \"agm-map{\\n\\theight: 50vh; /* For 100% screen height */\\n    width:  50vw;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/maps/dialog-map.css\n// module id = ./src/app/dialog/maps/dialog-map.css\n// module chunks = main","module.exports = \"<mat-dialog-content class=\\\"accent-color\\\"> \\n<agm-map *ngIf=\\\"dialogDisplay\\\" [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom] = \\\"15\\\">\\n  <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\"></agm-marker>\\n</agm-map>\\n</mat-dialog-content>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/maps/dialog-map.html\n// module id = ./src/app/dialog/maps/dialog-map.html\n// module chunks = main","/**\r\n * New typescript file\r\n */\r\n\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-dialog-map',\r\n  styleUrls: ['dialog-map.css'],\r\n  templateUrl: 'dialog-map.html',\r\n})\r\nexport class DialogMaps {\r\n  lat = 51.678418;\r\n  lng = 7.809007;\r\n  dialogDisplay = false;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.lat = Number(data['lat']);\r\n    this.lng = Number(data['lng']);\r\n    this.dialogDisplay = true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialog/maps/dialog.maps.component.ts","module.exports = \"\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dialog/register/register.component.html\n// module id = ./src/app/dialog/register/register.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    moduleId: module.id,\n    templateUrl: 'register.component.html'\n})\n\nexport class RegisterComponent {\n    model: any = {};\n    loading = false;\n\n    constructor(\n        private router: Router) { }\n\n    register() {\n        this.loading = true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dialog/register/register.component.ts","module.exports = \"#footer{\\n\\tposition:fixed;\\n\\tz-index:10;\\n\\tbottom: 0;\\n\\tleft: 0;\\n\\tpadding-top:20px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/footer/footer.component.css\n// module id = ./src/app/footer/footer.component.css\n// module chunks = main","module.exports = \"<div style=\\\"margin-bottom:100px\\\"></div>\\n<mat-toolbar id = \\\"footer\\\" color=\\\"primary\\\"></mat-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/footer/footer.component.html\n// module id = ./src/app/footer/footer.component.html\n// module chunks = main","/**\r\n * New typescript file\r\n */\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { AppMaterialModules } from '../material.module';\r\n\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: 'footer.component.html',\r\n  styleUrls: ['footer.component.css'],\r\n})\r\nexport class FooterComponent  implements OnInit {\r\n  // -----------------------------------------------------------------------//\r\n  // -----------------------------------------------------------------------//\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/footer/footer.component.ts","module.exports = \"#header{\\n\\tposition:fixed;\\n\\tz-index:10;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\ttext-aling: left;\\n}\\n\\n.spacer {\\n    -webkit-box-flex: 1;\\n    -ms-flex: 1 1 auto;\\n    flex: 1 1 auto;\\n}\\n\\n.home-bt-link{\\n\\ttext-decoration: none;\\n\\tcolor: #fff;\\n}\\n\\n.menu-width{\\n\\twidth: 300px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.css\n// module id = ./src/app/header/header.component.css\n// module chunks = main","module.exports = \"<mat-toolbar id=\\\"header\\\" color=\\\"primary\\\"></mat-toolbar>\\n\\n<div style=\\\"margin-top:100px\\\"></div>\\n\\n<mat-toolbar id=\\\"header\\\" color=\\\"primary\\\">\\n    <span><a class=\\\"home-bt-link\\\" href=\\\"\\\">{{ title }}</a></span>\\n    <span class=\\\"spacer\\\"></span>\\n    <span *ngIf=\\\"user\\\">Welcome {{user.username }}</span>\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\n      <mat-icon>more_vert</mat-icon>\\n    </button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <div class=\\\"menu-width\\\">\\n      <button *ngIf=\\\"user == null\\\" mat-menu-item (click)=\\\"openLogin()\\\">\\n        <mat-icon>fingerprint</mat-icon>\\n        <span>Sign in</span>\\n      </button>\\n      <button *ngIf=\\\"user\\\" mat-menu-item (click)=\\\"logOut()\\\">\\n        <mat-icon>fingerprint</mat-icon>\\n        <span>Log Out</span>\\n      </button>\\n      <button *ngIf=\\\"user && user.weatherId\\\" mat-menu-item (click)=\\\"createSensor()\\\">\\n        <mat-icon>library_add</mat-icon>\\n        <span>Add Sensor</span>\\n      </button>\\n      <button *ngIf=\\\"user && !user.weatherId\\\" mat-menu-item (click)=\\\"createWeatherStation()\\\">\\n        <mat-icon>library_add</mat-icon>\\n        <span>Add WeatherStation</span>\\n      </button>\\n      <button *ngIf=\\\"user && user.userRole == 'administrator'\\\" mat-menu-item (click)=\\\"createSensorTypeKnowledge()\\\">\\n        <mat-icon>library_add</mat-icon>\\n        <span>Add Sensor Type Knowledge</span>\\n      </button>\\n      <button *ngIf=\\\"user && user.userRole == 'administrator'\\\" mat-menu-item (click)=\\\"createUnitMeasureKnowledge()\\\">\\n        <mat-icon>library_add</mat-icon>\\n        <span>Add Unit Measure Knowledge</span>\\n      </button>\\n      <button *ngIf=\\\"user && user.userRole == 'administrator'\\\" mat-menu-item (click)=\\\"createConversionFactor()\\\">\\n        <mat-icon>library_add</mat-icon>\\n        <span>Add Conversion Factor</span>\\n      </button>\\n</div>\\n    </mat-menu>\\n</mat-toolbar>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/header/header.component.html\n// module id = ./src/app/header/header.component.html\n// module chunks = main","/**\r\n * New typescript file\r\n */\r\nimport { User } from '../user/user';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { AppMaterialModules } from '../material.module';\r\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { LoginComponent } from '../dialog/login/login.component';\r\nimport { CreateSensorComponent } from '../sensor/createSensor/createSensor.component';\r\nimport { CreateSensorKnowledgeComponent } from '../sensor/createSensorKnowledge/createSensorKnowledge.component';\r\nimport { CreateUnitKnowledgeComponent } from '../sensor/createUnitKnowledge/createUnitKnowledge.component';\r\nimport { CreateWeatherStationComponent } from '../weatherStation/createWeatherStation/createWeatherStation.component';\r\nimport { CreateConversionFactorComponent } from '../conversion/createConversionFactor/createConversionFactor.component';\r\nimport { AuthenticationService } from '../dialog/login/authentication.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: 'header.component.html',\r\n  styleUrls: ['header.component.css'],\r\n  providers: [AuthenticationService]\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  // -----------------------------------------------------------------------//\r\n  public title = 'Weather Station';\r\n  public user : User;\r\n  // -----------------------------------------------------------------------//\r\n  constructor(public dialog: MatDialog,private authenticationService: AuthenticationService,private router: Router) {\r\n    if(sessionStorage.getItem(\"currentUser\"))\r\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openLogin() {\r\n    let dialogRef = this.dialog.open(LoginComponent, {\r\n      data: { }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(this.user == null)\r\n        this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n\r\n      window.location.reload();\r\n    });\r\n  //   this.dialog.open(LoginComponent, {});\r\n  }\r\n\r\n  createSensor() {\r\n     let dialogRef = this.dialog.open(CreateSensorComponent, {\r\n       data: { weatherId: this.user.weatherId }\r\n     });\r\n\r\n     dialogRef.afterClosed().subscribe(result => {\r\n       if(this.user == null)\r\n         this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n\r\n        if(result == true)\r\n          window.location.reload();\r\n     });\r\n  }\r\n\r\n  createWeatherStation() {\r\n     let dialogRef = this.dialog.open(CreateWeatherStationComponent, {\r\n       data: { }\r\n     });\r\n\r\n     dialogRef.afterClosed().subscribe(result => {\r\n       window.location.reload();\r\n     });\r\n  }\r\n\r\n  logOut(){\r\n    this.authenticationService.logout();\r\n    this.user = null;\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n  createSensorTypeKnowledge(){\r\n    let dialogRef = this.dialog.open(CreateSensorKnowledgeComponent, {\r\n      data: { }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  createUnitMeasureKnowledge(){\r\n    let dialogRef = this.dialog.open(CreateUnitKnowledgeComponent, {\r\n      data: { }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  createConversionFactor(){\r\n    let dialogRef = this.dialog.open(CreateConversionFactorComponent, {\r\n      data: { }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/header/header.component.ts","/**\r\n * New typescript file\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule\r\n} from '@angular/material';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\n@NgModule({\r\n  exports: [\r\n    // Material Modules\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    MatStepperModule,\r\n    CdkTableModule,\r\n    A11yModule,\r\n    BidiModule,\r\n    ObserversModule,\r\n    OverlayModule,\r\n    PlatformModule,\r\n    PortalModule\r\n    ],\r\n  declarations: []\r\n})\r\nexport class AppMaterialModules {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/material.module.ts","import { Measure } from './measure';\nimport { MeasureChart } from './measureChart';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, RequestOptions } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n@Injectable()\nexport class MeasureService {\n  private _getMeasuresUrl = 'http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/measure/';\n  private _getMeasureBetweenDateUrl = 'http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/measure/getMeasureByDate';\n  constructor(private _http: HttpClient) { }\n\n   getMeasures(sensorId: string): Observable<Measure> {\n      const headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('sensorId', sensorId)\n        .set('Access-Control-Allow-Origin', '*');\n\n\n      return this._http.get(this._getMeasuresUrl,  {headers} )\n        .map((response: Response) => <Measure> response.json());\n   }\n\n\n   getMeasureBetweenDate(sensorId: number, fromDate: number, toDate: number): Observable<MeasureChart[]> {\n\n     //console.log('fromDate: ' + fromDate + ' toDate: ' + toDate);\n     const headers = new HttpHeaders()\n       .set('Content-Type', 'application/json')\n       .set('sensorId', '' + sensorId)\n       .set('fromDate', '' + fromDate)\n       .set('toDate', '' + toDate)\n       .set('Access-Control-Allow-Origin', '*');\n\n       return this._http.get(this._getMeasureBetweenDateUrl,  {headers} )\n         .map((response) => <MeasureChart[]> response);\n\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/measure/measure.service.ts","module.exports = \".create-sensor-form{\\n  min-width: 100px;\\n  max-width: 600px;\\n  width: 100%;\\n}\\n\\n.create-sensor-form-width{\\n  width: 100%;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/createSensor/createSensor.component.css\n// module id = ./src/app/sensor/createSensor/createSensor.component.css\n// module chunks = main","module.exports = \"<mat-dialog-content class=\\\"accent-color\\\">\\n  <h1>Create new Sensor</h1>\\n  <form class=\\\"create-sensor-form\\\" (submit)=\\\"createSensor($event)\\\">\\n\\n    <mat-form-field class=\\\"create-sensor-form-width\\\">\\n      <input matInput #title placeholder=\\\"The Title of your Sensor\\\" (keyup.enter)=\\\"addTitle(title.value)\\\" (blur)=\\\"addTitle(title.value)\\\" maxlength=\\\"50\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"create-sensor-form-width\\\">\\n      <mat-select placeholder=\\\"Chose sensor type\\\" [(ngModel)]=\\\"selectedSensorKnowledge\\\" name=\\\"-1\\\">\\n        <mat-option *ngFor=\\\"let sensorK of sensorKnowledges\\\" [value]=\\\"sensorK.id\\\">\\n          {{ sensorK.description }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div class=\\\"create-sensor-form-width\\\">\\n      <button mat-button>Create</button>\\n    </div>\\n  </form>\\n</mat-dialog-content>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/createSensor/createSensor.component.html\n// module id = ./src/app/sensor/createSensor/createSensor.component.html\n// module chunks = main","/**\n * New typescript file\n */\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { SensorKnowledge } from './sensorKnowledge';\nimport { UnitKnowledge } from '../createSensorKnowledge/unitKnowledge';\nimport { SensorService } from '../sensor.service';\nimport { User } from '../../user/user';\n\n\n\n@Component({\n  selector: 'app-CreateSensor',\n  templateUrl: 'createSensor.component.html',\n  styleUrls: ['createSensor.component.css'],\n  providers: [SensorService]\n})\nexport class CreateSensorComponent  implements OnInit {\n  private user : User;\n  // -----------------------------------------------------------------------//\n  sensorKnowledges: SensorKnowledge[];\n  selectedSensorKnowledge: string;\n  title: string;\n\n  // -----------------------------------------------------------------------//\n  constructor(private _sensorService: SensorService, public dialogRef: MatDialogRef<CreateSensorComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this.selectedSensorKnowledge = '0';\n    this._sensorService.getAllSensorKnowledge()\n        .subscribe(sensorKnowledges => this.sensorKnowledges = sensorKnowledges);\n  }\n\n  createSensor(e){\n\n    this._sensorService.createSensor(this.selectedSensorKnowledge, this.title , this.user)\n    .subscribe(\n      res => {\n          this.dialogRef.close(true);\n        },\n        err => {\n          this.dialogRef.close(false);\n          //openSnackBar(\"User or Password wrong\", \"undo\");\n\n      });\n  }\n\n  addTitle(title: string): void{\n    this.title = title;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/createSensor/createSensor.component.ts","module.exports = \".create-sensor-knowledge-form{\\n  min-width: 100px;\\n  max-width: 600px;\\n  width: 100%;\\n}\\n\\n.create-sensor-knowledge-form-width{\\n  width: 100%;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/createSensorKnowledge/createSensorKnowledge.component.css\n// module id = ./src/app/sensor/createSensorKnowledge/createSensorKnowledge.component.css\n// module chunks = main","module.exports = \"<mat-dialog-content class=\\\"accent-color\\\">\\n  <h1>Create new Sensor Type knowledge</h1>\\n  <form class=\\\"create-sensor-knowledge-form\\\" (submit)=\\\"createSensor($event)\\\">\\n    <mat-form-field  class=\\\"create-sensor-knowledge-form-width\\\">\\n      <input matInput #desc placeholder=\\\"Description of Sensor knowledge\\\" (keyup.enter)=\\\"addDescription(desc.value)\\\" (blur)=\\\"addDescription(desc.value)\\\" maxlength=\\\"50\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"create-sensor-knowledge-form-width\\\">\\n      <mat-select placeholder=\\\"Chose unit knowledge\\\" [formControl]=\\\"units\\\" multiple>\\n        <mat-option *ngFor=\\\"let unitK of unitKnowledges\\\" [value]=\\\"unitK.id\\\">{{ unitK.name }} [{{unitK.symbol}}]</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div class=\\\"create-sensor-knowledge-form-width\\\">\\n      <button mat-button>Create sensor knowledge</button>\\n    </div>\\n  </form>\\n</mat-dialog-content>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/createSensorKnowledge/createSensorKnowledge.component.html\n// module id = ./src/app/sensor/createSensorKnowledge/createSensorKnowledge.component.html\n// module chunks = main","/**\n * New typescript file\n */\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { SensorService } from '../sensor.service';\nimport { UnitKnowledge } from './UnitKnowledge';\nimport { User } from '../../user/user';\n\n\n\n@Component({\n  selector: 'app-createSensorKnowledge',\n  templateUrl: 'createSensorKnowledge.component.html',\n  styleUrls: ['createSensorKnowledge.component.css'],\n  providers: [SensorService]\n})\nexport class CreateSensorKnowledgeComponent  implements OnInit {\n  private user : User;\n  public description: string;\n  unitKnowledges: UnitKnowledge[];\n  // -----------------------------------------------------------------------//\n  units = new FormControl();\n  // -----------------------------------------------------------------------//\n  constructor(private _sensorService: SensorService, public dialogRef: MatDialogRef<CreateSensorKnowledgeComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this._sensorService.getAllUnitKnowledge()\n      .subscribe(unitKnowledges => this.unitKnowledges = unitKnowledges);\n  }\n\n  createSensor(e){\n    this._sensorService.createSensorKnowledge(this.user, this.description, this.units.value)\n    .subscribe(\n      res => {\n          this.dialogRef.close();\n        },\n        err => {\n          console.log('ERROR');\n          this.dialogRef.close();\n          //openSnackBar(\"User or Password wrong\", \"undo\");\n\n      });\n  }\n\n  addDescription(str){\n    this.description = str;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/createSensorKnowledge/createSensorKnowledge.component.ts","module.exports = \".create-unit-knowledge-form{\\n  min-width: 100px;\\n  max-width: 600px;\\n  width: 100%;\\n}\\n\\n.create-unit-knowledge-form-width{\\n  width: 100%;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/createUnitKnowledge/createUnitKnowledge.component.css\n// module id = ./src/app/sensor/createUnitKnowledge/createUnitKnowledge.component.css\n// module chunks = main","module.exports = \"<mat-dialog-content class=\\\"accent-color\\\">\\n  <h1>Create new Unit Type knowledge</h1>\\n  <form class=\\\"create-unit-knowledge-form\\\" (submit)=\\\"createUnit($event)\\\">\\n    <mat-form-field  class=\\\"create-unit-knowledge-form-width\\\">\\n      <input matInput #name placeholder=\\\"Name of Unit\\\" (keyup.enter)=\\\"addName(name.value)\\\" (blur)=\\\"addName(name.value)\\\" maxlength=\\\"50\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field  class=\\\"create-unit-knowledge-form-width\\\">\\n      <input matInput #symbol placeholder=\\\"Symbol of Unit\\\" (keyup.enter)=\\\"addSymbol(symbol.value)\\\" (blur)=\\\"addSymbol(symbol.value)\\\" maxlength=\\\"50\\\">\\n    </mat-form-field>\\n\\n    <div class=\\\"create-unit-knowledge-form-width\\\">\\n      <button mat-button>Create unit knowledge</button>\\n    </div>\\n  </form>\\n</mat-dialog-content>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/createUnitKnowledge/createUnitKnowledge.component.html\n// module id = ./src/app/sensor/createUnitKnowledge/createUnitKnowledge.component.html\n// module chunks = main","/**\n * New typescript file\n */\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { SensorService } from '../sensor.service';\nimport { UnitKnowledge } from '../createSensorKnowledge/UnitKnowledge';\nimport { User } from '../../user/user';\n\n\n\n@Component({\n  selector: 'app-createUnitKnowledge',\n  templateUrl: 'createUnitKnowledge.component.html',\n  styleUrls: ['createUnitKnowledge.component.css'],\n  providers: [SensorService]\n})\nexport class CreateUnitKnowledgeComponent  implements OnInit {\n  private user : User;\n  public name: string;\n  public symbol: string;\n\n  constructor(private _sensorService: SensorService, public dialogRef: MatDialogRef<CreateUnitKnowledgeComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() { }\n\n  createUnit(e){\n    this._sensorService.createUnitKnowledge(this.user, this.symbol, this.name)\n    .subscribe(\n      res => {\n          this.dialogRef.close();\n        },\n        err => {\n          console.log('ERROR');\n          //openSnackBar(\"User or Password wrong\", \"undo\");\n\n      });\n  }\n\n  addName(str){\n    this.name = str;\n  }\n\n  addSymbol(str){\n    this.symbol = str;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/createUnitKnowledge/createUnitKnowledge.component.ts","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Sensor } from '../../sensor';\nimport { ConversionFactor } from '../../../conversion/conversionFactor';\nimport { ConversionFactorService } from '../../../conversion/ConversionFactor.service';\nimport { Measure } from '../../../measure/measure';\nimport { MeasureChart } from '../../../measure/measureChart';\nimport { Chart } from 'chart.js';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MeasureService } from '../../../measure/measure.service';\nimport { UserService } from '../../../user/user.service';\nimport { User } from '../../../user/user';\n\n@Component({\n  selector: 'app-humidity-gauge',\n  templateUrl: './humidityGauge.html',\n  styleUrls: ['./humidityGauge.css'],\n  providers: [MeasureService,ConversionFactorService,UserService]\n})\nexport class HumidityGaugeComponent implements OnInit, OnChanges {\n  @Input() sensor: Sensor;\n  chart: Chart;\n  fromDate: Date;\n  toDate: Date;\n  quantityArray: string[];\n  labelArray: string[];\n  conversionFactors: ConversionFactor[];\n  unitConverterSelected = -1;\n  user: User;\n\n  constructor(private meausureService: MeasureService,private userService: UserService,private conversionService: ConversionFactorService) {\n      this.quantityArray = new Array();\n      this.labelArray = new Array();\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this.fromDate = new Date();\n    this.toDate = new Date();\n\n    this.fromDate.setHours(0,0,0,0);\n    this.toDate.setHours(23,59,59,999);\n\n    this.conversionService.getConversionFactorByFromId(''+this.sensor.unitKnowledgeId)\n        .subscribe(conversionFactors => {\n          this.conversionFactors = conversionFactors;\n          if(this.user){\n            let i = 0;\n            for(const unit of this.user.unitMeasure){\n              for(const conversion of this.conversionFactors){\n                if(Number(unit) == Number(conversion.id)){\n                  this.unitConverterSelected = i;\n                }\n                i = i + 1;\n              }\n            }\n          }\n        });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n  onChangeObj(event) {\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.removeUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n\n\n\n    this.unitConverterSelected = event.value + 0;\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.addUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n  }\n\n  isConversionfactor(): boolean{\n    if(this.unitConverterSelected > -1){\n      return true;\n    }\n\n    return false;\n  }\n\n  getMeasureSymbol(measure: Measure){\n    if(this.isConversionfactor()){\n        return this.conversionFactors[this.unitConverterSelected].toSymbol;\n    }\n\n    return measure.symbol;\n  }\n\n  getMeasureQuantity(measure: Measure) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure.quantity) * mul) + add);\n      return qt + '';\n    }\n\n    return measure.quantity;\n  }\n\n\n  getMeasureQuantityByStr(measure: string) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure) * mul) + add);\n      return qt + '';\n    }\n\n    return measure;\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    if(type == 'fromDate'){\n      this.fromDate = new Date(event.value);\n      this.fromDate.setHours(0,0,0,0);\n    }\n    if(type == 'toDate'){\n      this.toDate = new Date(event.value);\n      this.toDate.setHours(23,59,59,999);\n      //this.toDate.setHours(23,59,59,59);\n    }\n  }\n\n  drawChart(event: MatDatepickerInputEvent<Date>){\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n\n  initChart(){\n    if (this.chart) this.chart.destroy();\n    this.chart = new Chart('canvas-HumidityGaugeComponent',{\n      type: 'line',\n      data: {\n        labels: this.labelArray,\n        datasets: [\n              {\n                data: this.quantityArray,\n                borderColor: \"#790000\",\n                fill: false\n              }\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            responsive: true,\n\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n\n\n  checkConversionFactor(conversionFactors: ConversionFactor[]): boolean{\n    if(conversionFactors != null && conversionFactors.length > 0)\n      return true;\n\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/gauge/humidity/humidityGauge.component.ts","module.exports = \".weather-item{\\n    width: 100%;\\n    height: 350px;\\n    max-width: 1000px;\\n    min-width: 300px;\\n    background: #fff;\\n    margin: auto;\\n}\\n\\n.svg{\\n  margin-top: 20px;\\n}\\n\\n.weather-item-content{\\n  height: 230px;\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n\\n\\n}\\n\\n.weather-item-content-action{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n::ng-deep .mat-tab-labels{\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; /* align items in Main Axis */\\n}\\n\\n.chartDv{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n}\\n\\n.chartDv canvas{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n}\\n\\n.weather-humidity-div{\\n  width: 100%;\\n}\\n\\n.humidity-sensor-value{\\n  margin-left: 10px;\\n}\\n\\n.actual-humidity{\\n  font-size:50px;\\n  color: #656565;\\n}\\n\\n.max-humidity{\\n  font-size:20px;\\n  color: #790000;\\n}\\n\\n.min-humidity{\\n  font-size:20px;\\n  color: #055782;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/humidity/humidityGauge.css\n// module id = ./src/app/sensor/gauge/humidity/humidityGauge.css\n// module chunks = main","module.exports = \"<div class=\\\"weather-item\\\">\\n\\n\\t<mat-tab-group (selectedTabChange)=\\\"onTabChange($event)\\\">\\n\\t\\t<mat-tab label=\\\"Current data\\\">\\n\\t\\t\\t<div class=\\\"weather-humidity-div\\\">\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"3\\\" style=\\\"margin-top:40px\\\" rowHeight=\\\"200px\\\">\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\"><img src=\\\"assets/images/219816.svg\\\" width=\\\"100px\\\" height=\\\"100px\\\" /></mat-grid-tile>\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"2\\\" [rowspan]=\\\"1\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sensor.measure\\\" class=\\\"humidity-sensor-value\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field *ngIf=\\\"checkConversionFactor(conversionFactors)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-select placeholder=\\\"Conversion\\\" (change)=\\\"onChangeObj($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option *ngFor=\\\"let factor of conversionFactors; let i = index\\\" [value]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t      {{ factor.fromSymbol }} => {{factor.toSymbol}}\\n\\t\\t\\t\\t\\t\\t\\t\\t    </mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option [value]=\\\"-1\\\">Restore Value</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t  </mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item  class=\\\"actual-humidity\\\" matTooltip=\\\"{{sensor.measure.dateTime | date: 'd/M/yy, H:mm'}}\\\">{{getMeasureQuantity(sensor.measure) | number:'.1'}}{{getMeasureSymbol(sensor.measure)}}</mat-list-item>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.maxMeasure else nan_max_mex\\\" matTooltip=\\\"{{sensor.maxMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"max-humidity\\\">{{getMeasureQuantity(sensor.maxMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.maxMeasure)}}</p><ng-template #nan_max_mex><p class=\\\"max-humidity\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;|&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.minMeasure else nan_min_mex\\\" matTooltip=\\\"{{sensor.minMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"min-humidity\\\">{{getMeasureQuantity(sensor.minMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.minMeasure)}}</p><ng-template #nan_min_mex ><p class=\\\"min-humidity\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!sensor.measure\\\" style=\\\"color: #a90202; font-size: 30px;\\\"><mat-icon>error</mat-icon> Error no data found!</div>\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\n\\t\\t\\t\\t</mat-grid-list>\\n\\n\\t\\t\\t</div>\\n\\t\\t</mat-tab>\\n\\t\\t<mat-tab label=\\\"Chart\\\">\\n\\t\\t\\t<div [hidden]=\\\"!chart\\\" class=\\\"chartDv\\\">\\n\\t\\t    <canvas id=\\\"canvas-HumidityGaugeComponent\\\">{{ chart }}</canvas>\\n\\t\\t  </div>\\n\\t\\t\\t<form class=\\\"draw-measure\\\" (submit)=\\\"drawChart($event)\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\" placeholder=\\\"From date\\\">\\n  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n  \\t\\t\\t\\t\\t<mat-datepicker #fromDate></mat-datepicker>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"toDate\\\" (dateChange)=\\\"addEvent('toDate', $event)\\\" placeholder=\\\"To date\\\">\\n\\t  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n\\t  \\t\\t\\t\\t\\t<mat-datepicker #toDate></mat-datepicker>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t<button mat-button>Draw</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t</mat-tab>\\n</mat-tab-group>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/humidity/humidityGauge.html\n// module id = ./src/app/sensor/gauge/humidity/humidityGauge.html\n// module chunks = main","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Sensor } from '../../sensor';\nimport { ConversionFactor } from '../../../conversion/conversionFactor';\nimport { ConversionFactorService } from '../../../conversion/ConversionFactor.service';\nimport { Measure } from '../../../measure/measure';\nimport { MeasureChart } from '../../../measure/measureChart';\nimport { Chart } from 'chart.js';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MeasureService } from '../../../measure/measure.service';\nimport { UserService } from '../../../user/user.service';\nimport { User } from '../../../user/user';\n\n@Component({\n  selector: 'app-pressure-gauge',\n  templateUrl: './pressureGauge.html',\n  styleUrls: ['./pressureGauge.css'],\n  providers: [MeasureService, ConversionFactorService, UserService]\n})\nexport class PressureGaugeComponent implements OnInit, OnChanges {\n  @Input() sensor: Sensor;\n  chart: Chart;\n  fromDate: Date;\n  toDate: Date;\n  quantityArray: string[];\n  labelArray: string[];\n  conversionFactors: ConversionFactor[];\n  unitConverterSelected = -1;\n  user: User;\n\n  constructor(private meausureService: MeasureService,private userService: UserService, private conversionService: ConversionFactorService) {\n    this.quantityArray = new Array();\n    this.labelArray = new Array();\n    this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this.fromDate = new Date();\n    this.toDate = new Date();\n\n    this.fromDate.setHours(0,0,0,0);\n    this.toDate.setHours(23,59,59,999);\n\n    //this.unitConverterSelected = this.sensor.unitKnowledgeId;\n    this.conversionService.getConversionFactorByFromId(''+this.sensor.unitKnowledgeId)\n      .subscribe(conversionFactors => {\n        this.conversionFactors = conversionFactors;\n        if(this.user){\n          let i = 0;\n          for(const unit of this.user.unitMeasure){\n            for(const conversion of this.conversionFactors){\n              if(Number(unit) == Number(conversion.id)){\n                this.unitConverterSelected = i;\n              }\n              i = i + 1;\n            }\n          }\n        }\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n  onChangeObj(event) {\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.removeUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n\n\n\n    this.unitConverterSelected = event.value + 0;\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.addUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n  }\n\n\n  isConversionfactor(): boolean{\n    if(this.unitConverterSelected > -1){\n      return true;\n    }\n\n    return false;\n  }\n\n  getMeasureSymbol(measure: Measure){\n    if(this.isConversionfactor()){\n        return this.conversionFactors[this.unitConverterSelected].toSymbol;\n    }\n\n    return measure.symbol;\n  }\n\n  getMeasureQuantity(measure: Measure) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure.quantity) * mul) + add);\n      return qt + '';\n    }\n\n    return measure.quantity;\n  }\n\n\n  getMeasureQuantityByStr(measure: string) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure) * mul) + add);\n      return qt + '';\n    }\n\n    return measure;\n  }\n\n  checkConversionFactor(conversionFactors: ConversionFactor[]): boolean{\n    if(conversionFactors != null && conversionFactors.length > 0)\n      return true;\n\n    return false;\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    if(type == 'fromDate'){\n      this.fromDate = new Date(event.value);\n      this.fromDate.setHours(0,0,0,0);\n    }\n    if(type == 'toDate'){\n      this.toDate = new Date(event.value);\n      this.toDate.setHours(23,59,59,999);\n      //this.toDate.setHours(23,59,59,59);\n    }\n  }\n\n  drawChart(event: MatDatepickerInputEvent<Date>){\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n\n  initChart(){\n    if (this.chart) this.chart.destroy();\n    this.chart = new Chart('canvas-PressureGaugeComponent',{\n      type: 'line',\n      data: {\n        labels: this.labelArray,\n        datasets: [\n          {\n            data: this.quantityArray,\n            borderColor: \"#790000\",\n            fill: false\n          }\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            responsive: true,\n\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/gauge/pressure/pressureGauge.component.ts","module.exports = \".weather-item{\\n    width: 100%;\\n    height: 350px;\\n    max-width: 1000px;\\n    min-width: 300px;\\n    background: #fff;\\n    margin: auto;\\n}\\n\\n.svg{\\n  margin-top: 20px;\\n}\\n\\n.weather-item-content{\\n  height: 230px;\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n\\n\\n}\\n\\n.weather-item-content-action{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n::ng-deep .mat-tab-labels{\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; /* align items in Main Axis */\\n}\\n\\n.chartDv{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n}\\n\\n.chartDv canvas{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n}\\n\\n.weather-pressure-div{\\n  width: 100%;\\n}\\n\\n.pressure-sensor-value{\\n  margin-left: 10px;\\n}\\n\\n.actual-pressure{\\n  font-size:50px;\\n  color: #656565;\\n}\\n\\n.max-pressure{\\n  font-size:20px;\\n  color: #790000;\\n}\\n\\n.min-pressure{\\n  font-size:20px;\\n  color: #055782;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/pressure/pressureGauge.css\n// module id = ./src/app/sensor/gauge/pressure/pressureGauge.css\n// module chunks = main","module.exports = \"<div class=\\\"weather-item\\\">\\n\\n\\t<mat-tab-group (selectedTabChange)=\\\"onTabChange($event)\\\">\\n\\t\\t<mat-tab label=\\\"Current data\\\">\\n\\t\\t\\t<div class=\\\"weather-pressure-div\\\">\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"3\\\" style=\\\"margin-top:40px\\\" rowHeight=\\\"200px\\\">\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\"><img src=\\\"assets/images/measure.png\\\" width=\\\"100px\\\" height=\\\"100px\\\" /></mat-grid-tile>\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"2\\\" [rowspan]=\\\"1\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sensor.measure\\\" class=\\\"pressure-sensor-value\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field *ngIf=\\\"checkConversionFactor(conversionFactors)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-select placeholder=\\\"Conversion\\\" (change)=\\\"onChangeObj($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option *ngFor=\\\"let factor of conversionFactors; let i = index\\\" [value]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t      {{ factor.fromSymbol }} => {{factor.toSymbol}}\\n\\t\\t\\t\\t\\t\\t\\t\\t    </mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option [value]=\\\"-1\\\">Restore Value</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t  </mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item class=\\\"actual-pressure\\\" matTooltip=\\\"{{sensor.measure.dateTime | date: 'd/M/yy, H:mm'}}\\\">{{getMeasureQuantity(sensor.measure) | number:'.1'}}{{getMeasureSymbol(sensor.measure)}}</mat-list-item>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.maxMeasure else nan_max_mex\\\" matTooltip=\\\"{{sensor.maxMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"max-pressure\\\">{{getMeasureQuantity(sensor.maxMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.maxMeasure)}}</p><ng-template #nan_max_mex ><p class=\\\"max-pressure\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;|&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.minMeasure else nan_min_mex\\\" matTooltip=\\\"{{sensor.minMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"min-pressure\\\">{{getMeasureQuantity(sensor.minMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.minMeasure)}}</p><ng-template #nan_min_mex ><p class=\\\"min-pressure\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!sensor.measure\\\" style=\\\"color: #a90202; font-size: 30px;\\\"><mat-icon>error</mat-icon> Error no data found!</div>\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\n\\t\\t\\t\\t</mat-grid-list>\\n\\n\\t\\t\\t</div>\\n\\t\\t</mat-tab>\\n\\t\\t<mat-tab label=\\\"Chart\\\">\\n\\t\\t\\t<div [hidden]=\\\"!chart\\\" class=\\\"chartDv\\\">\\n\\t\\t    <canvas id=\\\"canvas-PressureGaugeComponent\\\">{{ chart }}</canvas>\\n\\t\\t  </div>\\n\\t\\t\\t<form class=\\\"draw-measure\\\" (submit)=\\\"drawChart($event)\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\" placeholder=\\\"From date\\\">\\n  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n  \\t\\t\\t\\t\\t<mat-datepicker #fromDate></mat-datepicker>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"toDate\\\" (dateChange)=\\\"addEvent('toDate', $event)\\\" placeholder=\\\"To date\\\">\\n\\t  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n\\t  \\t\\t\\t\\t\\t<mat-datepicker #toDate></mat-datepicker>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t<button mat-button>Draw</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t</mat-tab>\\n</mat-tab-group>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/pressure/pressureGauge.html\n// module id = ./src/app/sensor/gauge/pressure/pressureGauge.html\n// module chunks = main","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Sensor } from '../../sensor';\nimport { ConversionFactor } from '../../../conversion/conversionFactor';\nimport { ConversionFactorService } from '../../../conversion/ConversionFactor.service';\nimport { Measure } from '../../../measure/measure';\nimport { MeasureChart } from '../../../measure/measureChart';\nimport { Chart } from 'chart.js';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MeasureService } from '../../../measure/measure.service';\nimport { UserService } from '../../../user/user.service';\nimport { User } from '../../../user/user';\n\n@Component({\n  selector: 'app-rain-gauge',\n  templateUrl: './rainGauge.html',\n  styleUrls: ['./rainGauge.css'],\n  providers: [MeasureService, ConversionFactorService, UserService]\n})\nexport class RainGaugeComponent implements OnInit, OnChanges {\n  @Input() sensor: Sensor;\n  chart: Chart;\n  fromDate: Date;\n  toDate: Date;\n  quantityArray: string[];\n  labelArray: string[];\n  conversionFactors: ConversionFactor[];\n  unitConverterSelected = -1;\n  user: User;\n\n  constructor(private meausureService: MeasureService, private userService: UserService,private conversionService: ConversionFactorService) {\n      this.quantityArray = new Array();\n      this.labelArray = new Array();\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this.fromDate = new Date();\n    this.toDate = new Date();\n\n    this.fromDate.setHours(0,0,0,0);\n    this.toDate.setHours(23,59,59,999);\n\n    //this.unitConverterSelected = this.sensor.unitKnowledgeId;\n    this.conversionService.getConversionFactorByFromId(''+this.sensor.unitKnowledgeId)\n      .subscribe(conversionFactors => {\n        this.conversionFactors = conversionFactors;\n        if(this.user){\n          let i = 0;\n          for(const unit of this.user.unitMeasure){\n            for(const conversion of this.conversionFactors){\n              if(Number(unit) == Number(conversion.id)){\n                this.unitConverterSelected = i;\n              }\n              i = i + 1;\n            }\n          }\n        }\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n  onChangeObj(event) {\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.removeUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n\n\n\n    this.unitConverterSelected = event.value + 0;\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.addUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n  }\n\n  isConversionfactor(): boolean{\n    if(this.unitConverterSelected > -1){\n      return true;\n    }\n\n    return false;\n  }\n\n  getMeasureSymbol(measure: Measure){\n    if(this.isConversionfactor()){\n        return this.conversionFactors[this.unitConverterSelected].toSymbol;\n    }\n\n    return measure.symbol;\n  }\n\n  getMeasureQuantity(measure: Measure) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure.quantity) * mul) + add);\n      return qt + '';\n    }\n\n    return measure.quantity;\n  }\n\n\n  getMeasureQuantityByStr(measure: string) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure) * mul) + add);\n      return qt + '';\n    }\n\n    return measure;\n  }\n\n  checkConversionFactor(conversionFactors: ConversionFactor[]): boolean{\n    if(conversionFactors != null && conversionFactors.length > 0)\n      return true;\n\n    return false;\n  }\n\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    if(type == 'fromDate'){\n      this.fromDate = new Date(event.value);\n      this.fromDate.setHours(0,0,0,0);\n    }\n    if(type == 'toDate'){\n      this.toDate = new Date(event.value);\n      this.toDate.setHours(23,59,59,999);\n      //this.toDate.setHours(23,59,59,59);\n    }\n  }\n\n  drawChart(event: MatDatepickerInputEvent<Date>){\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n\n  initChart(){\n    if (this.chart) this.chart.destroy();\n    this.chart = new Chart('canvas-RainGaugeComponent',{\n      type: 'bar',\n      data: {\n        labels: this.labelArray,\n        datasets: [\n              {\n                data: this.quantityArray,\n                borderColor: \"#3cba9f\",\n                fill: false\n              },\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            responsive: true,\n\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/gauge/rain/rainGauge.component.ts","module.exports = \".weather-item{\\n    width: 100%;\\n    height: 350px;\\n    max-width: 1000px;\\n    min-width: 300px;\\n    background: #fff;\\n    margin: auto;\\n}\\n\\n.svg{\\n  margin-top: 20px;\\n}\\n\\n.weather-item-content{\\n  height: 230px;\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n\\n\\n}\\n\\n.weather-item-content-action{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n::ng-deep .mat-tab-labels{\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; /* align items in Main Axis */\\n}\\n\\n.chartDv{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n}\\n\\n.chartDv canvas{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n}\\n\\n.weather-rain-div{\\n  width: 100%;\\n}\\n\\n.rain-sensor-value{\\n  margin-left: 10px;\\n}\\n\\n.actual-rain{\\n  font-size:50px;\\n  color: #656565;\\n}\\n\\n.max-rain{\\n  font-size:20px;\\n  color: #790000;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/rain/rainGauge.css\n// module id = ./src/app/sensor/gauge/rain/rainGauge.css\n// module chunks = main","module.exports = \"<div class=\\\"weather-item\\\">\\n\\n\\t<mat-tab-group (selectedTabChange)=\\\"onTabChange($event)\\\">\\n\\t\\t<mat-tab label=\\\"Current data\\\">\\n\\t\\t\\t<div class=\\\"weather-rain-div\\\">\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"3\\\" style=\\\"margin-top:40px\\\" rowHeight=\\\"200px\\\">\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\"><img src=\\\"assets/images/rain.png\\\" width=\\\"100px\\\" height=\\\"100px\\\" /></mat-grid-tile>\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"2\\\" [rowspan]=\\\"1\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sensor.measure\\\" class=\\\"rain-sensor-value\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field *ngIf=\\\"checkConversionFactor(conversionFactors)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Conversion\\\" (change)=\\\"onChangeObj($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let factor of conversionFactors; let i = index\\\" [value]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ factor.fromSymbol }} => {{factor.toSymbol}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-option [value]=\\\"-1\\\">Restore Value</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item class=\\\"actual-rain\\\" matTooltip=\\\"{{sensor.measure.dateTime | date: 'd/M/yy, H:mm'}}\\\">{{getMeasureQuantity(sensor.measure) | number:'.1'}}{{getMeasureSymbol(sensor.measure)}}</mat-list-item>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.maxMeasure else nan_max_mex\\\" matTooltip=\\\"{{sensor.maxMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"max-rain\\\">{{getMeasureQuantity(sensor.maxMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.maxMeasure)}}</p><ng-template #nan_max_mex ><p class=\\\"max-rain\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!sensor.measure\\\" style=\\\"color: #a90202; font-size: 30px;\\\"><mat-icon>error</mat-icon> Error no data found!</div>\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\n\\t\\t\\t\\t</mat-grid-list>\\n\\n\\t\\t\\t</div>\\n\\t\\t</mat-tab>\\n\\t\\t<mat-tab label=\\\"Chart\\\">\\n\\t\\t\\t<div [hidden]=\\\"!chart\\\" class=\\\"chartDv\\\">\\n\\t\\t    <canvas id=\\\"canvas-RainGaugeComponent\\\">{{ chart }}</canvas>\\n\\t\\t  </div>\\n\\t\\t\\t<form class=\\\"draw-measure\\\" (submit)=\\\"drawChart($event)\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\" placeholder=\\\"From date\\\">\\n  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n  \\t\\t\\t\\t\\t<mat-datepicker #fromDate></mat-datepicker>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"toDate\\\" (dateChange)=\\\"addEvent('toDate', $event)\\\" placeholder=\\\"To date\\\">\\n\\t  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n\\t  \\t\\t\\t\\t\\t<mat-datepicker #toDate></mat-datepicker>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t<button mat-button>Draw</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t</mat-tab>\\n</mat-tab-group>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/rain/rainGauge.html\n// module id = ./src/app/sensor/gauge/rain/rainGauge.html\n// module chunks = main","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Sensor } from '../../sensor';\nimport { ConversionFactor } from '../../../conversion/conversionFactor';\nimport { ConversionFactorService } from '../../../conversion/ConversionFactor.service';\nimport { MeasureChart } from '../../../measure/measureChart';\nimport { Chart } from 'chart.js';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MeasureService } from '../../../measure/measure.service';\nimport { Measure } from '../../../measure/measure';\nimport { UserService } from '../../../user/user.service';\nimport { User } from '../../../user/user';\n\n@Component({\n  selector: 'app-temperature-gauge',\n  templateUrl: './temperatureGauge.html',\n  styleUrls: ['./temperatureGauge.css'],\n  providers: [MeasureService, ConversionFactorService, UserService]\n})\nexport class TemperatureGaugeComponent implements OnInit, OnChanges {\n  @Input() sensor: Sensor;\n  chart: Chart;\n  fromDate: Date;\n  toDate: Date;\n  conversionFactors: ConversionFactor[];\n  quantityArray: string[];\n  labelArray: string[];\n  user: User;\n  unitConverterSelected = -1;\n\n  constructor(private meausureService: MeasureService, private userService: UserService,private conversionService: ConversionFactorService) {\n    this.quantityArray = new Array();\n    this.labelArray = new Array();\n    this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this.fromDate = new Date();\n    this.toDate = new Date();\n\n    this.fromDate.setHours(0,0,0,0);\n    this.toDate.setHours(23,59,59,999);\n\n    //this.unitConverterSelected = this.sensor.unitKnowledgeId;\n    this.conversionService.getConversionFactorByFromId(''+this.sensor.unitKnowledgeId)\n      .subscribe(conversionFactors => {\n        this.conversionFactors = conversionFactors;\n        if(this.user){\n          let i = 0;\n          for(const unit of this.user.unitMeasure){\n            for(const conversion of this.conversionFactors){\n              if(Number(unit) == Number(conversion.id)){\n                this.unitConverterSelected = i;\n              }\n              i = i + 1;\n            }\n          }\n        }\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n\n  onChangeObj(event) {\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.removeUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n\n\n\n    this.unitConverterSelected = event.value + 0;\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.addUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n  }\n\n  isConversionfactor(): boolean{\n    if(this.unitConverterSelected > -1){\n      return true;\n    }\n\n    return false;\n  }\n\n  getMeasureSymbol(measure: Measure){\n    if(this.isConversionfactor()){\n        return this.conversionFactors[this.unitConverterSelected].toSymbol;\n    }\n\n    return measure.symbol;\n  }\n\n  getMeasureQuantity(measure: Measure) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure.quantity) * mul) + add);\n      return qt + '';\n    }\n\n    return measure.quantity;\n  }\n\n\n  getMeasureQuantityByStr(measure: string) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure) * mul) + add);\n      return qt + '';\n    }\n\n    return measure;\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    if(type == 'fromDate'){\n      this.fromDate = new Date(event.value);\n      this.fromDate.setHours(0,0,0,0);\n    }\n    if(type == 'toDate'){\n      this.toDate = new Date(event.value);\n      this.toDate.setHours(23,59,59,999);\n      //this.toDate.setHours(23,59,59,59);\n    }\n  }\n\n  drawChart(event: MatDatepickerInputEvent<Date>){\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n\n  initChart(){\n    if (this.chart) this.chart.destroy();\n    this.chart = new Chart('canvas-TemperatureGaugeComponent',{\n      type: 'line',\n      data: {\n        labels: this.labelArray,\n        datasets: [\n          {\n            data: this.quantityArray,\n            borderColor: \"#790000\",\n            fill: false\n          }\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            responsive: true,\n\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n\n\n    checkConversionFactor(conversionFactors: ConversionFactor[]): boolean{\n      if(conversionFactors != null && conversionFactors.length > 0)\n        return true;\n\n      return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/gauge/temperature/temperatureGauge.component.ts","module.exports = \".weather-item{\\n    width: 100%;\\n    height: 350px;\\n    max-width: 1000px;\\n    min-width: 300px;\\n    background: #fff;\\n    margin: auto;\\n}\\n\\n.svg{\\n  margin-top: 20px;\\n}\\n\\n.weather-item-content{\\n  height: 230px;\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n\\n\\n}\\n\\n.weather-item-content-action{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n::ng-deep .mat-tab-labels{\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; /* align items in Main Axis */\\n}\\n\\n.chartDv{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n}\\n\\n.chartDv canvas{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n}\\n\\n.weather-temperature-div{\\n  width: 100%;\\n}\\n\\n.temperature-sensor-value{\\n  margin-left: 10px;\\n}\\n\\n.actual-temperature{\\n  font-size:50px;\\n  color: #656565;\\n}\\n\\n.max-temperature{\\n  font-size:20px;\\n  color: #790000;\\n}\\n\\n.min-temperature{\\n  font-size:20px;\\n  color: #055782;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/temperature/temperatureGauge.css\n// module id = ./src/app/sensor/gauge/temperature/temperatureGauge.css\n// module chunks = main","module.exports = \"<div class=\\\"weather-item\\\">\\n\\n\\t<mat-tab-group (selectedTabChange)=\\\"onTabChange($event)\\\">\\n\\t\\t<mat-tab label=\\\"Current data\\\">\\n\\t\\t\\t<div class=\\\"weather-temperature-div\\\">\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"3\\\" style=\\\"margin-top:40px\\\" rowHeight=\\\"200px\\\">\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\">\\n\\t\\t\\t\\t\\t\\t\\t<img src=\\\"assets/images/weather-temperature-icons_354261.png\\\" width=\\\"100px\\\" height=\\\"100px\\\" />\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"2\\\" [rowspan]=\\\"1\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sensor.measure\\\" class=\\\"temperature-sensor-value\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field *ngIf=\\\"checkConversionFactor(conversionFactors)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-select placeholder=\\\"Conversion\\\" (change)=\\\"onChangeObj($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-option *ngFor=\\\"let factor of conversionFactors; let i = index\\\" [value]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{ factor.fromSymbol }} => {{factor.toSymbol}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-option [value]=\\\"-1\\\">Restore Value</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item class=\\\"actual-temperature\\\" matTooltip=\\\"{{sensor.measure.dateTime | date: 'd/M/yy, H:mm'}}\\\">{{getMeasureQuantity(sensor.measure) | number:'.1'}}{{getMeasureSymbol(sensor.measure)}}</mat-list-item>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.maxMeasure else nan_max_mex\\\" matTooltip=\\\"{{sensor.maxMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"max-temperature\\\">{{getMeasureQuantity(sensor.maxMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.maxMeasure)}}</p><ng-template #nan_max_mex ><p class=\\\"max-temperature\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;|&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.minMeasure else nan_min_mex\\\" matTooltip=\\\"{{sensor.minMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"min-temperature\\\">{{getMeasureQuantity(sensor.minMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.minMeasure)}}</p><ng-template #nan_min_mex ><p class=\\\"min-temperature\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!sensor.measure\\\" style=\\\"color: #a90202; font-size: 30px;\\\"><mat-icon>error</mat-icon> Error no data found!</div>\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\n\\t\\t\\t\\t</mat-grid-list>\\n\\n\\t\\t\\t</div>\\n\\t\\t</mat-tab>\\n\\t\\t<mat-tab label=\\\"Chart\\\">\\n\\t\\t\\t<div [hidden]=\\\"!chart\\\" class=\\\"chartDv\\\">\\n\\t\\t    <canvas id=\\\"canvas-TemperatureGaugeComponent\\\">{{ chart }}</canvas>\\n\\t\\t  </div>\\n\\t\\t\\t<form class=\\\"draw-measure\\\" (submit)=\\\"drawChart($event)\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\" placeholder=\\\"From date\\\">\\n  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n  \\t\\t\\t\\t\\t<mat-datepicker #fromDate></mat-datepicker>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"toDate\\\" (dateChange)=\\\"addEvent('toDate', $event)\\\" placeholder=\\\"To date\\\">\\n\\t  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n\\t  \\t\\t\\t\\t\\t<mat-datepicker #toDate></mat-datepicker>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t<button mat-button>Draw</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t</mat-tab>\\n</mat-tab-group>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/temperature/temperatureGauge.html\n// module id = ./src/app/sensor/gauge/temperature/temperatureGauge.html\n// module chunks = main","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Sensor } from '../../sensor';\nimport { ConversionFactor } from '../../../conversion/conversionFactor';\nimport { ConversionFactorService } from '../../../conversion/ConversionFactor.service';\nimport { Measure } from '../../../measure/measure';\nimport { MeasureChart } from '../../../measure/measureChart';\nimport { Chart } from 'chart.js';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MeasureService } from '../../../measure/measure.service';\nimport { UserService } from '../../../user/user.service';\nimport { User } from '../../../user/user';\n\n@Component({\n  selector: 'app-uv-gauge',\n  templateUrl: './uvGauge.html',\n  styleUrls: ['./uvGauge.css'],\n  providers: [MeasureService, ConversionFactorService, UserService]\n})\nexport class UVGaugeComponent implements OnInit, OnChanges {\n  @Input() sensor: Sensor;\n  chart: Chart;\n  fromDate: Date;\n  toDate: Date;\n  quantityArray: string[];\n  labelArray: string[];\n  conversionFactors: ConversionFactor[];\n  unitConverterSelected = -1;\n  user: User;\n\n  constructor(private meausureService: MeasureService, private userService: UserService,private conversionService: ConversionFactorService) {\n      this.quantityArray = new Array();\n      this.labelArray = new Array();\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this.fromDate = new Date();\n    this.toDate = new Date();\n\n    this.fromDate.setHours(0,0,0,0);\n    this.toDate.setHours(23,59,59,999);\n\n    //this.unitConverterSelected = this.sensor.unitKnowledgeId;\n    this.conversionService.getConversionFactorByFromId(''+this.sensor.unitKnowledgeId)\n      .subscribe(conversionFactors => {\n        this.conversionFactors = conversionFactors;\n        if(this.user){\n          let i = 0;\n          for(const unit of this.user.unitMeasure){\n            for(const conversion of this.conversionFactors){\n              if(Number(unit) == Number(conversion.id)){\n                this.unitConverterSelected = i;\n              }\n              i = i + 1;\n            }\n          }\n        }\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n\n  onChangeObj(event) {\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.removeUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n\n\n\n    this.unitConverterSelected = event.value + 0;\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.addUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n  }\n\n\n  isConversionfactor(): boolean{\n    if(this.unitConverterSelected > -1){\n      return true;\n    }\n\n    return false;\n  }\n\n  getMeasureSymbol(measure: Measure){\n    if(this.isConversionfactor()){\n        return this.conversionFactors[this.unitConverterSelected].toSymbol;\n    }\n\n    return measure.symbol;\n  }\n\n  getMeasureQuantity(measure: Measure) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure.quantity) * mul) + add);\n      return qt + '';\n    }\n\n    return measure.quantity;\n  }\n\n\n  getMeasureQuantityByStr(measure: string) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure) * mul) + add);\n      return qt + '';\n    }\n\n    return measure;\n  }\n\n  checkConversionFactor(conversionFactors: ConversionFactor[]): boolean{\n    if(conversionFactors != null && conversionFactors.length > 0)\n      return true;\n\n    return false;\n  }\n\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    if(type == 'fromDate'){\n      this.fromDate = new Date(event.value);\n      this.fromDate.setHours(0,0,0,0);\n    }\n    if(type == 'toDate'){\n      this.toDate = new Date(event.value);\n      this.toDate.setHours(23,59,59,999);\n      //this.toDate.setHours(23,59,59,59);\n    }\n  }\n\n  drawChart(event: MatDatepickerInputEvent<Date>){\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n\n  initChart(){\n    if (this.chart) this.chart.destroy();\n    this.chart = new Chart('canvas-UVGaugeComponent',{\n      type: 'line',\n      data: {\n        labels: this.labelArray,\n        datasets: [\n              {\n                data: this.quantityArray,\n                borderColor: \"#3cba9f\",\n                fill: false\n              },\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            responsive: true,\n\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/gauge/uv/uvGauge.component.ts","module.exports = \".weather-item{\\n    width: 100%;\\n    height: 350px;\\n    max-width: 1000px;\\n    min-width: 300px;\\n    background: #fff;\\n    margin: auto;\\n}\\n\\n.svg{\\n  margin-top: 20px;\\n}\\n\\n.weather-item-content{\\n  height: 230px;\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n\\n\\n}\\n\\n.weather-item-content-action{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n::ng-deep .mat-tab-labels{\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; /* align items in Main Axis */\\n}\\n\\n.chartDv{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n}\\n\\n.chartDv canvas{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n}\\n\\n.weather-humidity-div{\\n  width: 100%;\\n}\\n\\n.humidity-sensor-value{\\n  margin-left: 10px;\\n}\\n\\n.actual-uv{\\n  font-size:50px;\\n  color: #656565;\\n}\\n\\n.max-uv{\\n  font-size:20px;\\n  color: #790000;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/uv/uvGauge.css\n// module id = ./src/app/sensor/gauge/uv/uvGauge.css\n// module chunks = main","module.exports = \"<div class=\\\"weather-item\\\">\\n\\n\\t<mat-tab-group (selectedTabChange)=\\\"onTabChange($event)\\\">\\n\\t\\t<mat-tab label=\\\"Current data\\\">\\n\\t\\t\\t<div class=\\\"weather-uv-div\\\">\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"3\\\" style=\\\"margin-top:40px\\\" rowHeight=\\\"200px\\\">\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\"><img src=\\\"assets/images/13-512.png\\\" width=\\\"100px\\\" height=\\\"100px\\\" /></mat-grid-tile>\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"2\\\" [rowspan]=\\\"1\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sensor.measure\\\" class=\\\"uv-sensor-value\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field *ngIf=\\\"checkConversionFactor(conversionFactors)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-select placeholder=\\\"Conversion\\\" (change)=\\\"onChangeObj($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option *ngFor=\\\"let factor of conversionFactors; let i = index\\\" [value]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t      {{ factor.fromSymbol }} => {{factor.toSymbol}}\\n\\t\\t\\t\\t\\t\\t\\t\\t    </mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option [value]=\\\"-1\\\">Restore Value</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t  </mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item class=\\\"actual-uv\\\" matTooltip=\\\"{{sensor.measure.dateTime | date: 'd/M/yy, H:mm'}}\\\">{{getMeasureQuantity(sensor.measure) | number:'.1'}}{{getMeasureSymbol(sensor.measure)}}</mat-list-item>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.maxMeasure else nan_max_mex\\\" matTooltip=\\\"{{sensor.maxMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"max-uv\\\">{{getMeasureQuantity(sensor.maxMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.maxMeasure)}}</p><ng-template #nan_max_mex ><p class=\\\"max-uv\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!sensor.measure\\\" style=\\\"color: #a90202; font-size: 30px;\\\"><mat-icon>error</mat-icon> Error no data found!</div>\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\n\\t\\t\\t\\t</mat-grid-list>\\n\\n\\t\\t\\t</div>\\n\\t\\t</mat-tab>\\n\\t\\t<mat-tab label=\\\"Chart\\\">\\n\\t\\t\\t<div [hidden]=\\\"!chart\\\" class=\\\"chartDv\\\">\\n\\t\\t    <canvas id=\\\"canvas-UVGaugeComponent\\\">{{ chart }}</canvas>\\n\\t\\t  </div>\\n\\t\\t\\t<form class=\\\"draw-measure\\\" (submit)=\\\"drawChart($event)\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\" placeholder=\\\"From date\\\">\\n  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n  \\t\\t\\t\\t\\t<mat-datepicker #fromDate></mat-datepicker>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"toDate\\\" (dateChange)=\\\"addEvent('toDate', $event)\\\" placeholder=\\\"To date\\\">\\n\\t  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n\\t  \\t\\t\\t\\t\\t<mat-datepicker #toDate></mat-datepicker>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t<button mat-button>Draw</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t</mat-tab>\\n</mat-tab-group>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/uv/uvGauge.html\n// module id = ./src/app/sensor/gauge/uv/uvGauge.html\n// module chunks = main","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Sensor } from '../../sensor';\nimport { ConversionFactor } from '../../../conversion/conversionFactor';\nimport { ConversionFactorService } from '../../../conversion/ConversionFactor.service';\nimport { Measure } from '../../../measure/measure';\nimport { MeasureChart } from '../../../measure/measureChart';\nimport { Chart } from 'chart.js';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MeasureService } from '../../../measure/measure.service';\nimport { UserService } from '../../../user/user.service';\nimport { User } from '../../../user/user';\n\n@Component({\n  selector: 'app-windDirection-gauge',\n  templateUrl: './windDirectionGauge.html',\n  styleUrls: ['./windDirectionGauge.css'],\n  providers: [MeasureService, ConversionFactorService, UserService]\n})\nexport class WindDirectionGaugeComponent implements OnInit, OnChanges {\n  @Input() sensor: Sensor;\n  chart: Chart;\n  fromDate: Date;\n  toDate: Date;\n  quantityArray: string[];\n  labelArray: string[];\n  conversionFactors: ConversionFactor[];\n  unitConverterSelected = -1;\n  user: User;\n\n  constructor(private meausureService: MeasureService, private userService: UserService,private conversionService: ConversionFactorService) {\n      this.quantityArray = new Array();\n      this.labelArray = new Array();\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this.fromDate = new Date();\n    this.toDate = new Date();\n\n    this.fromDate.setHours(0,0,0,0);\n    this.toDate.setHours(23,59,59,999);\n\n    //this.unitConverterSelected = this.sensor.unitKnowledgeId;\n    this.conversionService.getConversionFactorByFromId(''+this.sensor.unitKnowledgeId)\n      .subscribe(conversionFactors => {\n        this.conversionFactors = conversionFactors;\n        if(this.user){\n          let i = 0;\n          for(const unit of this.user.unitMeasure){\n            for(const conversion of this.conversionFactors){\n              if(Number(unit) == Number(conversion.id)){\n                this.unitConverterSelected = i;\n              }\n              i = i + 1;\n            }\n          }\n        }\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n  onChangeObj(event) {\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.removeUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n\n\n\n    this.unitConverterSelected = event.value + 0;\n\n    if(this.isConversionfactor() && this.user != null){\n      this.userService.addUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n        .subscribe(user => {\n          if (user){\n            sessionStorage.setItem('currentUser', JSON.stringify(user));\n          }\n        });\n    }\n  }\n\n  isConversionfactor(): boolean{\n    if(this.unitConverterSelected > -1){\n      return true;\n    }\n\n    return false;\n  }\n\n  getMeasureSymbol(measure: Measure){\n    if(this.isConversionfactor()){\n        return this.conversionFactors[this.unitConverterSelected].toSymbol;\n    }\n\n    return measure.symbol;\n  }\n\n  getMeasureQuantity(measure: Measure) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure.quantity) * mul) + add);\n      return qt + '';\n    }\n\n    return measure.quantity;\n  }\n\n\n  getMeasureQuantityByStr(measure: string) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure) * mul) + add);\n      return qt + '';\n    }\n\n    return measure;\n  }\n\n  checkConversionFactor(conversionFactors: ConversionFactor[]): boolean{\n    if(conversionFactors != null && conversionFactors.length > 0)\n      return true;\n\n    return false;\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    if(type == 'fromDate'){\n      this.fromDate = new Date(event.value);\n      this.fromDate.setHours(0,0,0,0);\n    }\n    if(type == 'toDate'){\n      this.toDate = new Date(event.value);\n      this.toDate.setHours(23,59,59,999);\n      //this.toDate.setHours(23,59,59,59);\n    }\n  }\n\n  drawChart(event: MatDatepickerInputEvent<Date>){\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        this.getCountDirection(results);\n        this.initChart();\n      });\n  }\n\n  initChart(){\n    if (this.chart) this.chart.destroy();\n    this.chart = new Chart('canvas-WindDirectionGaugeComponent',{\n      type: 'bar',\n      data: {\n        labels: this.labelArray,\n        datasets: [\n              {\n                data: this.quantityArray,\n                borderColor: \"#3cba9f\",\n                fill: false\n              },\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            responsive: true,\n\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n  }\n\n  getAngle(angleStr: string) : string{\n    let angle = Number(angleStr);\n    if(angle >= 0 && angle < 22) return \"N\";\n    else if(angle >= 22 && angle < 45) return \"NNE\";\n    else if(angle >= 45 && angle < 67) return \"NE\";\n    else if(angle >= 67 && angle < 90) return \"ENE\";\n    else if(angle >= 90 && angle < 112) return \"E\";\n    else if(angle >= 112 && angle < 135) return \"ESE\";\n    else if(angle >= 135 && angle < 157) return \"SE\";\n    else if(angle >= 157 && angle < 180) return \"SSE\";\n    else if(angle >= 180 && angle < 202) return \"S\";\n    else if(angle >= 202 && angle < 225) return \"SSW\";\n    else if(angle >= 225 && angle < 247) return \"SW\";\n    else if(angle >= 247 && angle < 270) return \"WSW\";\n    else if(angle >= 270 && angle < 292) return \"W\";\n    else if(angle >= 292 && angle < 315) return \"WNW\";\n    else if(angle >= 315 && angle < 337) return \"NW\";\n    else if(angle >= 337 && angle < 360) return \"NNW\";\n    else return \"NaN\";\n  }\n\n  getCountDirection(results: any) : void{\n    let N = 0;\n    let NNE = 0;\n    let NE = 0;\n    let ENE = 0;\n    let E = 0;\n    let ESE = 0;\n    let SE = 0;\n    let SSE = 0;\n    let S = 0;\n    let SSW = 0;\n    let SW = 0;\n    let WSW = 0;\n    let W = 0;\n    let WNW = 0;\n    let NW = 0;\n    let NNW = 0;\n    for (const i of results) {\n      let m = <MeasureChart> i;\n      let angle = Number(this.getMeasureQuantityByStr(m.quantity));\n      if(angle >= 0 && angle < 22) {\n        N = N + 1;\n      }else if(angle >= 22 && angle < 45){\n        NNE = NNE + 1;\n      }else if(angle >= 45 && angle < 67){\n        NE = NE + 1;\n      }else if(angle >= 67 && angle < 90){\n        ENE = ENE + 1;\n      }else if(angle >= 90 && angle < 112){\n        E = E + 1;\n      }else if(angle >= 112 && angle < 135){\n        ESE = ESE + 1;\n      }else if(angle >= 135 && angle < 157){\n        SE = SE + 1;\n      }else if(angle >= 157 && angle < 180){\n        SSE = SSE + 1;\n      }else if(angle >= 180 && angle < 202){\n        S = S + 1;\n      }else if(angle >= 202 && angle < 225){\n        SSW = SSW + 1;\n      }else if(angle >= 225 && angle < 247){\n        SW = SW + 1;\n      }else if(angle >= 247 && angle < 270){\n        WSW = WSW + 1;\n      }else if(angle >= 270 && angle < 292){\n        W = W + 1;\n      }else if(angle >= 292 && angle < 315){\n        WNW = WNW + 1;\n      }else if(angle >= 315 && angle < 337){\n        NW = NW + 1;\n      }else if(angle >= 337 && angle < 360){\n        NNW = NNW + 1;\n      }\n    }\n    this.quantityArray.push(String(N));\n    this.labelArray.push(\"N\");\n    this.quantityArray.push(String(NNE));\n    this.labelArray.push(\"NNE\");\n    this.quantityArray.push(String(NE));\n    this.labelArray.push(\"NE\");\n    this.quantityArray.push(String(ENE));\n    this.labelArray.push(\"ENE\");\n    this.quantityArray.push(String(E));\n    this.labelArray.push(\"E\");\n    this.quantityArray.push(String(ESE));\n    this.labelArray.push(\"ESE\");\n    this.quantityArray.push(String(SE));\n    this.labelArray.push(\"SE\");\n    this.quantityArray.push(String(SSE));\n    this.labelArray.push(\"SSE\");\n    this.quantityArray.push(String(S));\n    this.labelArray.push(\"S\");\n    this.quantityArray.push(String(SSW));\n    this.labelArray.push(\"SSW\");\n    this.quantityArray.push(String(SW));\n    this.labelArray.push(\"SW\");\n    this.quantityArray.push(String(WSW));\n    this.labelArray.push(\"WSW\");\n    this.quantityArray.push(String(W));\n    this.labelArray.push(\"W\");\n    this.quantityArray.push(String(WNW));\n    this.labelArray.push(\"WNW\");\n    this.quantityArray.push(String(NW));\n    this.labelArray.push(\"Nw\");\n    this.quantityArray.push(String(NNW));\n    this.labelArray.push(\"NNW\");\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        this.getCountDirection(results);\n        this.initChart();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/gauge/windDirection/windDirectionGauge.component.ts","module.exports = \".weather-item{\\n    width: 100%;\\n    height: 350px;\\n    max-width: 1000px;\\n    min-width: 300px;\\n    background: #fff;\\n    margin: auto;\\n}\\n\\n.svg{\\n  margin-top: 20px;\\n}\\n\\n.weather-item-content{\\n  height: 230px;\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n\\n\\n}\\n\\n.weather-item-content-action{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n::ng-deep .mat-tab-labels{\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; /* align items in Main Axis */\\n}\\n\\n.chartDv{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n}\\n\\n.chartDv canvas{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n}\\n\\n.weather-windsdirection-div{\\n  width: 100%;\\n}\\n\\n.windsdirection-sensor-value{\\n  margin-left: 10px;\\n}\\n\\n.actual-windsdirection{\\n  font-size:50px;\\n  color: #656565;\\n}\\n\\n.max-windsdirection{\\n  font-size:20px;\\n  color: #656565;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.min-windsdirection{\\n  font-size:20px;\\n  color: #656565;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/windDirection/windDirectionGauge.css\n// module id = ./src/app/sensor/gauge/windDirection/windDirectionGauge.css\n// module chunks = main","module.exports = \"<div class=\\\"weather-item\\\">\\n\\n\\t<mat-tab-group (selectedTabChange)=\\\"onTabChange($event)\\\">\\n\\t\\t<mat-tab label=\\\"Current data\\\">\\n\\t\\t\\t<div class=\\\"weather-windsdirection-div\\\">\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"3\\\" style=\\\"margin-top:40px\\\" rowHeight=\\\"200px\\\">\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\"><img src=\\\"assets/images/13020.svg\\\" width=\\\"100px\\\" height=\\\"100px\\\" /></mat-grid-tile>\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"2\\\" [rowspan]=\\\"1\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sensor.measure\\\"  class=\\\"windsdirection-sensor-value\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field *ngIf=\\\"checkConversionFactor(conversionFactors)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-select placeholder=\\\"Conversion\\\" (change)=\\\"onChangeObj($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option *ngFor=\\\"let factor of conversionFactors; let i = index\\\" [value]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t      {{ factor.fromSymbol }} => {{factor.toSymbol}}\\n\\t\\t\\t\\t\\t\\t\\t\\t    </mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option [value]=\\\"-1\\\">Restore Value</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t  </mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item class=\\\"actual-windsdirection\\\" matTooltip=\\\"{{sensor.measure.dateTime | date: 'd/M/yy, H:mm'}}\\\">{{getAngle(sensor.measure.quantity)}}</mat-list-item>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.maxMeasure else nan_max_mex\\\" matTooltip=\\\"{{sensor.maxMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"max-windsdirection\\\">{{getMeasureQuantity(sensor.maxMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.maxMeasure)}}</p><ng-template #nan_max_mex ><p class=\\\"max-windsdirection\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!sensor.measure\\\" style=\\\"color: #a90202; font-size: 30px;\\\"><mat-icon>error</mat-icon> Error no data found!</div>\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\n\\t\\t\\t\\t</mat-grid-list>\\n\\n\\t\\t\\t</div>\\n\\t\\t</mat-tab>\\n\\t\\t<mat-tab label=\\\"Chart\\\">\\n\\t\\t\\t<div [hidden]=\\\"!chart\\\" class=\\\"chartDv\\\">\\n\\t\\t    <canvas id=\\\"canvas-WindDirectionGaugeComponent\\\">{{ chart }}</canvas>\\n\\t\\t  </div>\\n\\t\\t\\t<form class=\\\"draw-measure\\\" (submit)=\\\"drawChart($event)\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\" placeholder=\\\"From date\\\">\\n  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n  \\t\\t\\t\\t\\t<mat-datepicker #fromDate></mat-datepicker>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"toDate\\\" (dateChange)=\\\"addEvent('toDate', $event)\\\" placeholder=\\\"To date\\\">\\n\\t  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n\\t  \\t\\t\\t\\t\\t<mat-datepicker #toDate></mat-datepicker>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t<button mat-button>Draw</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t</mat-tab>\\n</mat-tab-group>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/windDirection/windDirectionGauge.html\n// module id = ./src/app/sensor/gauge/windDirection/windDirectionGauge.html\n// module chunks = main","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { Sensor } from '../../sensor';\nimport { ConversionFactor } from '../../../conversion/conversionFactor';\nimport { ConversionFactorService } from '../../../conversion/ConversionFactor.service';\nimport { Measure } from '../../../measure/measure';\nimport { MeasureChart } from '../../../measure/measureChart';\nimport { Chart } from 'chart.js';\nimport { MatTabChangeEvent } from '@angular/material';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MeasureService } from '../../../measure/measure.service';\nimport { UserService } from '../../../user/user.service';\nimport { User } from '../../../user/user';\n\n@Component({\n  selector: 'app-windspeed-gauge',\n  templateUrl: './windspeedGauge.html',\n  styleUrls: ['./windspeedGauge.css'],\n  providers: [MeasureService, ConversionFactorService, UserService]\n})\nexport class WindspeedGaugeComponent implements OnInit, OnChanges {\n  @Input() sensor: Sensor;\n  chart: Chart;\n  fromDate: Date;\n  toDate: Date;\n  quantityArray: string[];\n  labelArray: string[];\n  conversionFactors: ConversionFactor[];\n  unitConverterSelected = -1;\n  user: User;\n\n  constructor(private meausureService: MeasureService,private userService: UserService,private conversionService: ConversionFactorService) {\n    this.quantityArray = new Array();\n    this.labelArray = new Array();\n    this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    this.fromDate = new Date();\n    this.toDate = new Date();\n\n    this.fromDate.setHours(0,0,0,0);\n    this.toDate.setHours(23,59,59,999);\n\n    this.conversionService.getConversionFactorByFromId(''+this.sensor.unitKnowledgeId)\n      .subscribe(conversionFactors => {\n        this.conversionFactors = conversionFactors;\n        if(this.user){\n          let i = 0;\n          for(const unit of this.user.unitMeasure){\n            for(const conversion of this.conversionFactors){\n              if(Number(unit) == Number(conversion.id)){\n                this.unitConverterSelected = i;\n              }\n              i = i + 1;\n            }\n          }\n        }\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n  }\n\n\n    onChangeObj(event) {\n\n      if(this.isConversionfactor() && this.user != null){\n        this.userService.removeUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n          .subscribe(user => {\n            if (user){\n              sessionStorage.setItem('currentUser', JSON.stringify(user));\n            }\n          });\n      }\n\n\n\n      this.unitConverterSelected = event.value + 0;\n\n      if(this.isConversionfactor() && this.user != null){\n        this.userService.addUnitKnowledgeUser(this.user, this.conversionFactors[this.unitConverterSelected].id)\n          .subscribe(user => {\n            if (user){\n              sessionStorage.setItem('currentUser', JSON.stringify(user));\n            }\n          });\n      }\n    }\n\n  isConversionfactor(): boolean{\n    if(this.unitConverterSelected > -1){\n      return true;\n    }\n\n    return false;\n  }\n\n  getMeasureSymbol(measure: Measure){\n    if(this.isConversionfactor()){\n        return this.conversionFactors[this.unitConverterSelected].toSymbol;\n    }\n\n    return measure.symbol;\n  }\n\n  getMeasureQuantity(measure: Measure) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure.quantity) * mul) + add);\n      return qt + '';\n    }\n\n    return measure.quantity;\n  }\n\n\n  getMeasureQuantityByStr(measure: string) : string{\n    if(this.isConversionfactor()){\n      let mul = this.conversionFactors[this.unitConverterSelected].conversionFactorMul + 0;\n      let add = this.conversionFactors[this.unitConverterSelected].conversionFactorAdd + 0;\n      let qt = ((Number(measure) * mul) + add);\n      return qt + '';\n    }\n\n    return measure;\n  }\n\n  checkConversionFactor(conversionFactors: ConversionFactor[]): boolean{\n    if(conversionFactors != null && conversionFactors.length > 0)\n      return true;\n\n    return false;\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    if(type == 'fromDate'){\n      this.fromDate = new Date(event.value);\n      this.fromDate.setHours(0,0,0,0);\n    }\n    if(type == 'toDate'){\n      this.toDate = new Date(event.value);\n      this.toDate.setHours(23,59,59,999);\n      //this.toDate.setHours(23,59,59,59);\n    }\n  }\n\n  drawChart(event: MatDatepickerInputEvent<Date>){\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n\n  initChart(){\n    if (this.chart) this.chart.destroy();\n    this.chart = new Chart('canvas-WindspeedGaugeComponent',{\n      type: 'line',\n      data: {\n        labels: this.labelArray,\n        datasets: [\n          {\n            data: this.quantityArray,\n            borderColor: \"#790000\",\n            fill: false\n          }\n            ]\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            responsive: true,\n\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.meausureService.getMeasureBetweenDate(this.sensor.id,this.fromDate.getTime(),this.toDate.getTime())\n      .subscribe(results => {\n        this.labelArray.length = 0;\n        this.quantityArray.length = 0;\n        for (const i of results) {\n          let m = <MeasureChart> i;\n          this.labelArray.push(m.dateTime);\n          this.quantityArray.push(this.getMeasureQuantityByStr(m.quantity));\n        }\n        this.initChart();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/gauge/windspeed/windspeedGauge.component.ts","module.exports = \".weather-item{\\n    width: 100%;\\n    height: 350px;\\n    max-width: 1000px;\\n    min-width: 300px;\\n    background: #fff;\\n    margin: auto;\\n}\\n\\n.svg{\\n  margin-top: 20px;\\n}\\n\\n.weather-item-content{\\n  height: 230px;\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n\\n\\n}\\n\\n.weather-item-content-action{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n::ng-deep .mat-tab-labels{\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center; /* align items in Main Axis */\\n}\\n\\n.chartDv{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 20px;\\n}\\n\\n.chartDv canvas{\\n  width: 100%;\\n  height: 100%;\\n\\n  max-width: 500px;\\n  max-height: 250px;\\n}\\n\\n.weather-windspeed-div{\\n  width: 100%;\\n}\\n\\n.windspeed-sensor-value{\\n  margin-left: 10px;\\n}\\n\\n.actual-windspeed{\\n  font-size:50px;\\n  color: #656565;\\n}\\n\\n.max-windspeed{\\n  font-size:20px;\\n  color: #790000;\\n}\\n\\n.min-windspeed{\\n  font-size:20px;\\n  color: #055782;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/windspeed/windspeedGauge.css\n// module id = ./src/app/sensor/gauge/windspeed/windspeedGauge.css\n// module chunks = main","module.exports = \"<div class=\\\"weather-item\\\">\\n\\n\\t<mat-tab-group (selectedTabChange)=\\\"onTabChange($event)\\\">\\n\\t\\t<mat-tab label=\\\"Current data\\\">\\n\\t\\t\\t<div class=\\\"weather-windspeed-div\\\">\\n\\t\\t\\t\\t<mat-grid-list cols=\\\"3\\\" style=\\\"margin-top:40px\\\" rowHeight=\\\"200px\\\">\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"1\\\"><img src=\\\"assets/images/wind-speed-icon-22.jpg\\\" width=\\\"100px\\\" height=\\\"100px\\\" /></mat-grid-tile>\\n  \\t\\t\\t\\t<mat-grid-tile [colspan]=\\\"2\\\" [rowspan]=\\\"1\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"sensor.measure\\\"  class=\\\"windspeed-sensor-value\\\">\\n\\t\\t\\t\\t\\t\\t\\t<mat-list>\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field *ngIf=\\\"checkConversionFactor(conversionFactors)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t  <mat-select placeholder=\\\"Conversion\\\" (change)=\\\"onChangeObj($event)\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option *ngFor=\\\"let factor of conversionFactors; let i = index\\\" [value]=\\\"i\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t      {{ factor.fromSymbol }} => {{factor.toSymbol}}\\n\\t\\t\\t\\t\\t\\t\\t\\t    </mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t    <mat-option [value]=\\\"-1\\\">Restore Value</mat-option>\\n\\t\\t\\t\\t\\t\\t\\t\\t  </mat-select>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item class=\\\"actual-windspeed\\\" matTooltip=\\\"{{sensor.measure.dateTime | date: 'd/M/yy, H:mm'}}\\\">{{getMeasureQuantity(sensor.measure) | number:'.1'}}{{getMeasureSymbol(sensor.measure)}}</mat-list-item>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-divider></mat-divider>\\n  \\t\\t\\t\\t\\t\\t\\t<mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.maxMeasure else nan_max_mex\\\" matTooltip=\\\"{{sensor.maxMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"max-windspeed\\\">{{getMeasureQuantity(sensor.maxMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.maxMeasure)}}</p><ng-template #nan_max_mex><p class=\\\"max-windspeed\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t&nbsp;&nbsp;|&nbsp;&nbsp;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"sensor.minMeasure else nan_min_mex\\\" matTooltip=\\\"{{sensor.minMeasure.dateTime | date: 'd/M/yy, H:mm'}}\\\" class=\\\"min-windspeed\\\">{{getMeasureQuantity(sensor.minMeasure) | number:'.1'}}{{getMeasureSymbol(sensor.minMeasure)}}</p><ng-template #nan_min_mex><p class=\\\"min-windspeed\\\" matTooltip=\\\"no data\\\">NaN</p></ng-template>\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-list-item>\\n\\t\\t\\t\\t\\t\\t\\t</mat-list>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"!sensor.measure\\\" style=\\\"color: #a90202; font-size: 30px;\\\"><mat-icon>error</mat-icon> Error no data found!</div>\\n\\t\\t\\t\\t\\t</mat-grid-tile>\\n\\t\\t\\t\\t</mat-grid-list>\\n\\n\\t\\t\\t</div>\\n\\t\\t</mat-tab>\\n\\t\\t<mat-tab label=\\\"Chart\\\">\\n\\t\\t\\t<div [hidden]=\\\"!chart\\\" class=\\\"chartDv\\\">\\n\\t\\t    <canvas id=\\\"canvas-WindspeedGaugeComponent\\\">{{ chart }}</canvas>\\n\\t\\t  </div>\\n\\t\\t\\t<form class=\\\"draw-measure\\\" (submit)=\\\"drawChart($event)\\\">\\n\\t\\t\\t\\t<mat-form-field>\\n  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"fromDate\\\" (dateChange)=\\\"addEvent('fromDate', $event)\\\" placeholder=\\\"From date\\\">\\n  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n  \\t\\t\\t\\t\\t<mat-datepicker #fromDate></mat-datepicker>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<mat-form-field>\\n\\t  \\t\\t\\t\\t<input matInput [matDatepicker]=\\\"toDate\\\" (dateChange)=\\\"addEvent('toDate', $event)\\\" placeholder=\\\"To date\\\">\\n\\t  \\t\\t \\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n\\t  \\t\\t\\t\\t\\t<mat-datepicker #toDate></mat-datepicker>\\n\\t\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t\\t<button mat-button>Draw</button>\\n\\t\\t\\t\\t</form>\\n\\t\\t</mat-tab>\\n</mat-tab-group>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/gauge/windspeed/windspeedGauge.html\n// module id = ./src/app/sensor/gauge/windspeed/windspeedGauge.html\n// module chunks = main","/**\r\n * New typescript file\r\n */\r\nimport { Measure } from '../measure/measure';\r\nimport { MeasureService } from '../measure/measure.service';\r\nimport { Sensor } from './sensor';\r\nimport { User } from '../user/user';\r\nimport { SensorService } from './sensor.service';\r\nimport { DialogDeleteSensor } from './sheet/delete/dialogDeleteSensor.component';\r\nimport { DialogEditSensor } from './sheet/edit/dialogEditSensor.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { forkJoin } from 'rxjs/observable/forkJoin';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sensor',\r\n  styleUrls: ['sensor.css'],\r\n  templateUrl: 'sensor.html'\r\n})\r\nexport class SensorComponent {\r\n  sensors: Sensor[];\r\n  weatherStationId: number;\r\n  user: User;\r\n  sensorIdArray: number[];\r\n  constructor(public dialog: MatDialog,private http: HttpClient, private _sensor: SensorService, private route: ActivatedRoute) {\r\n    this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));//sessionStorage  localStorage\r\n    this.weatherStationId = Number(sessionStorage.getItem(\"currentWeatherSelected\"));//sessionStorage  localStorage\r\n    this.sensorIdArray = JSON.parse(sessionStorage.getItem(\"currentSensorSelected\"));\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.sensors = [];\r\n    //const sensorIdArray = this.route.snapshot.paramMap.get('weather').split('#');\r\n    this.sensorIdArray = JSON.parse(sessionStorage.getItem(\"currentSensorSelected\"));\r\n    //sensorIdArray.pop(); // rimuovo l'ultimo elemento della lista che è vuoto\r\n    const sensorAsync = [];\r\n    for (const id of this.sensorIdArray) {\r\n        sensorAsync.push(this._sensor.getSensor(''+id));\r\n    }\r\n    forkJoin(sensorAsync).subscribe(results => {\r\n    //  console.log(results);\r\n      for (const i of results) {\r\n        if(i != null)\r\n          this.sensors.push(<Sensor> i);\r\n      }\r\n    });\r\n  }\r\n\r\n  openDeleteSensorSheet(sensorId:string): void {\r\n    let dialogRef = this.dialog.open(DialogDeleteSensor, {\r\n      data: { sensorId: sensorId }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n      if(result > 0)\r\n        this.removeSensorWithId(result);\r\n    });\r\n  }\r\n\r\n  openEditSensorSheet(sensorId:string): void{\r\n    console.log('edit sensor')\r\n    let dialogRef = this.dialog.open(DialogEditSensor, {\r\n      data: { sensorId: sensorId }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n  removeSensorWithId(sensorId: number){\r\n    let tempSensors = this.sensors;\r\n    this.sensors = [];\r\n    this.sensorIdArray = [];\r\n    for (const sensor of tempSensors) {\r\n      if(!(sensor.id == sensorId)){\r\n        this.sensors.push(sensor);\r\n        this.sensorIdArray.push(sensor.id);\r\n      }\r\n    }\r\n    sessionStorage.setItem('currentSensorSelected', JSON.stringify(this.sensorIdArray));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/sensor.component.ts","module.exports = \".sensorCard{\\n  margin: 10px;\\n  text-align: center;\\n  height: 450px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/sensor.css\n// module id = ./src/app/sensor/sensor.css\n// module chunks = main","module.exports = \"<div class=\\\"sensorItems\\\">\\n\\t<!--------------------------------------------------------------------------------------->\\n\\t<mat-card *ngFor=\\\"let sensor of sensors let i = index\\\" class=\\\"sensorCard\\\">\\n\\t\\t<mat-card-title matTooltip=\\\"Sensor Type: {{sensor.description}}\\\">{{sensor.title}}</mat-card-title>\\n\\t\\t\\t\\t\\t<mat-card-content class=\\\"sensorContent\\\">\\n\\t\\t\\t\\t\\t\\t<app-temperature-gauge *ngIf=\\\"sensor.description=='Temperature'\\\" [sensor]=\\\"sensor\\\"></app-temperature-gauge>\\n\\t\\t\\t\\t\\t\\t<app-windspeed-gauge *ngIf=\\\"sensor.description=='Wind speed'\\\" [sensor]=\\\"sensor\\\"></app-windspeed-gauge>\\n\\t\\t\\t\\t\\t\\t<app-rain-gauge *ngIf=\\\"sensor.description=='Rain gauge'\\\" [sensor]=\\\"sensor\\\"></app-rain-gauge>\\n\\t\\t\\t\\t\\t\\t<app-windDirection-gauge *ngIf=\\\"sensor.description=='Wind direction'\\\" [sensor]=\\\"sensor\\\"></app-windDirection-gauge>\\n\\t\\t\\t\\t\\t\\t<app-humidity-gauge *ngIf=\\\"sensor.description=='Humidity'\\\" [sensor]=\\\"sensor\\\"></app-humidity-gauge>\\n\\t\\t\\t\\t\\t\\t<app-uv-gauge *ngIf=\\\"sensor.description=='Ultraviolet'\\\" [sensor]=\\\"sensor\\\"></app-uv-gauge>\\n\\t\\t\\t\\t\\t\\t<app-pressure-gauge *ngIf=\\\"sensor.description=='Pressure'\\\" [sensor]=\\\"sensor\\\"></app-pressure-gauge>\\n\\t\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t\\t\\t<mat-card-actions *ngIf=\\\"user && weatherStationId && user.weatherId==weatherStationId\\\">\\n    \\t\\t\\t\\t<button mat-button (click)=\\\"openEditSensorSheet(sensor.id)\\\"><mat-icon>mode_edit</mat-icon>EDIT</button>\\n    \\t\\t\\t\\t<button mat-button (click)=\\\"openDeleteSensorSheet(sensor.id)\\\"><mat-icon>delete</mat-icon>DELETE</button>\\n  \\t\\t\\t\\t</mat-card-actions>\\n\\t</mat-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/sensor.html\n// module id = ./src/app/sensor/sensor.html\n// module chunks = main","import { Sensor } from './sensor';\nimport { User } from '../user/user';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SensorKnowledge } from './createSensor/sensorKnowledge';\nimport { UnitKnowledge } from './createSensorKnowledge/unitKnowledge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n@Injectable()\nexport class SensorService {\n  constructor(private http: HttpClient) { }\n   getSensor(sensorId: string): Observable<Object> {\n      const headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('sensorId', sensorId)\n        .set('unitMeasureId', '1');\n\n      return this.http.get(\"http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor/\",  {headers} );\n   }\n\n\n   deleteSensor(sensorId: string, user: User) {\n      const headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('sensorId', '' + sensorId)\n        .set('weatherId', '' + user.weatherId)\n        .set('token', '' + user.token);\n\n      return this.http.delete(\"http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor/\",  {headers} );\n   }\n\n   createSensor(sensorTypeId: string, title: string, user: User) {\n       const headers = new HttpHeaders()\n         .set('Content-Type', 'application/json')\n         .set('token', user.token)\n\n       return this.http.post<any>('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor',\n           JSON.stringify({ weatherId: user.weatherId, sensorTypeId: sensorTypeId, title: title }), {headers})\n         .map(sensor => {\n             return sensor;\n         });\n   }\n\n   editSensor(sensorId: string,sensorTypeId: string, user: User) {\n      const headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('token', '' + user.token)\n        .set('sensorId', '' + sensorId)\n        .set('sensorKnowledgeId', '' + sensorTypeId);\n\n        console.log(headers);\n\n      return this.http.put(\"http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor/\",  {headers} );\n\n   }\n\n   getAllSensorKnowledge(): Observable<SensorKnowledge[]> {\n      const headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n\n      return this.http.get('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor/sensorType' , {headers})\n        .map((response) => <SensorKnowledge[]> response);\n   }\n\n\n   getAllUnitKnowledge(): Observable<UnitKnowledge[]> {\n     const headers = new HttpHeaders()\n       .set('Content-Type', 'application/json');\n\n     return this.http.get('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor/unitKnowledge', {headers})\n      .map((response) => <UnitKnowledge[]> response);\n   }\n\n   getAllUnitKnowledgeBySensorKnowledge(sensorKnowledge: string): Observable<UnitKnowledge[]> {\n     const headers = new HttpHeaders()\n       .set('Content-Type', 'application/json')\n       .set('sensorKnowledgeId', sensorKnowledge);\n\n     return this.http.get('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor/unitKnowledge/fromSensorKnowledge', {headers})\n      .map((response) => <UnitKnowledge[]> response);\n   }\n\n\n\n\n   createSensorKnowledge(user: User, description: string, selectedUnitKnowledges: string[]){\n     const headers = new HttpHeaders()\n       .set('Content-Type', 'application/json')\n       .set('token', '' + user.token);\n\n       const obj = {\n         description: description,\n         selectedUnitKnowledges: selectedUnitKnowledges\n       };\n\n\n     return this.http.post<any>('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor/sensorKnowledge',\n           JSON.stringify(obj), {headers});\n   }\n\n   createUnitKnowledge(user:User, symbol:string, name:string){\n     const headers = new HttpHeaders()\n       .set('Content-Type', 'application/json')\n       .set('token', '' + user.token)\n\n     return this.http.post<any>('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/sensor/unitKnowledge',\n         JSON.stringify({ symbol: symbol, name: name }), {headers});\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/sensor.service.ts","import {Component, Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { SensorService } from '../../sensor.service';\nimport {MatSnackBar} from '@angular/material';\nimport { User } from '../../../user/user';\n\n@Component({\n  selector: 'app-DialogDeleteSensor',\n  templateUrl: 'dialogDeleteSensor.html',\n  styleUrls: ['dialogDeleteSensor.css'],\n  providers: [ SensorService ]\n})\nexport class DialogDeleteSensor {\n  private user : User;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private _sensor: SensorService,\n    public dialogRef: MatDialogRef<DialogDeleteSensor>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n    }\n\n\n  cancelSensor(): void{\n    if(this.user != null){\n      this._sensor.deleteSensor(this.data.sensorId, this.user)\n        .subscribe((res: any) => {\n          this.snackBar.open(\"Sensor deleted correctly\", null, {duration: 3000,});\n            this.closeDialog(Number(this.data.sensorId));\n          },\n          err => {\n            this.snackBar.open(\"Generic Error!\", null, {duration: 3000,});\n            this.closeDialog(-1);\n          });\n    }else{\n      this.snackBar.open(\"User not valid\", null, {duration: 3000,});\n    }\n\n    //this.closeDialog(Number(this.data.sensorId));\n\n  }\n\n  onNoClick(): void {\n    this.closeDialog(-1);\n  }\n\n  closeDialog(sensorId: number): void{\n    this.dialogRef.close(sensorId);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/sheet/delete/dialogDeleteSensor.component.ts","module.exports = \".delete-dialog-title{\\n  width: 100%;\\n  text-align: center;\\n}\\n.delete-dialog-title h2{\\n  color: #d40000;\\n}\\n.confirm-bt-delete-dialog {\\n  color: #fff;\\n  background-color: #d40000;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/sheet/delete/dialogDeleteSensor.css\n// module id = ./src/app/sensor/sheet/delete/dialogDeleteSensor.css\n// module chunks = main","module.exports = \"<div class=\\\"delete-dialog-title\\\">\\n  <h2>Warning!</h2>\\n  <p>This operation will delete the sensor and all the measures associated, after press the confirm button the operation can not rolled back.</p>\\n  <button mat-button class=\\\"confirm-bt-delete-dialog\\\" (click)=\\\"cancelSensor()\\\">Confirm</button>\\n  <button mat-button (click)=\\\"onNoClick()\\\">Close</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/sheet/delete/dialogDeleteSensor.html\n// module id = ./src/app/sensor/sheet/delete/dialogDeleteSensor.html\n// module chunks = main","import {Component, Inject,  Input, OnInit} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { SensorService } from '../../sensor.service';\nimport { SensorKnowledge } from '../../createSensor/sensorKnowledge';\nimport {MatSnackBar} from '@angular/material';\nimport { User } from '../../../user/user';\n\n@Component({\n  selector: 'app-DialogEditSensor',\n  templateUrl: 'dialogEditSensor.html',\n  styleUrls: ['dialogEditSensor.css'],\n  providers: [ SensorService ]\n})\nexport class DialogEditSensor implements OnInit {\n  private user : User;\n  sensorKnowledges: SensorKnowledge[];\n  selectedSensorKnowledge: string;\n\n  constructor(\n    private snackBar: MatSnackBar,\n    private _sensor: SensorService,\n    public dialogRef: MatDialogRef<DialogEditSensor>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));//sessionStorage  localStorage\n    }\n\n  ngOnInit() {\n      this.selectedSensorKnowledge = '0';\n      this._sensor.getAllSensorKnowledge()\n        .subscribe(sensorKnowledges => this.sensorKnowledges = sensorKnowledges);\n  }\n\n  editSensor(e){\n\n    this._sensor.editSensor(this.data.sensorId,this.selectedSensorKnowledge, this.user)\n      .subscribe(\n        res => {\n            this.dialogRef.close();\n          },\n          err => {\n            console.log('ERROR');\n          //openSnackBar(\"User or Password wrong\", \"undo\");\n\n      });\n  }\n\n  onNoClick(): void {\n    this.closeDialog();\n  }\n\n  closeDialog(): void{\n    this.dialogRef.close();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sensor/sheet/edit/dialogEditSensor.component.ts","module.exports = \".edit-dialog-title{\\n  width: 300px;\\n  text-align: center;\\n}\\n.edit-sensor-form{\\n  min-width: 100px;\\n  max-width: 600px;\\n  width: 100%;\\n}\\n.edit-sensor-form-width{\\n  width: 100%;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/sheet/edit/dialogEditSensor.css\n// module id = ./src/app/sensor/sheet/edit/dialogEditSensor.css\n// module chunks = main","module.exports = \"<div class=\\\"edit-dialog-title\\\">\\n<mat-dialog-content class=\\\"accent-color\\\">\\n  <h2>Edit Sensor</h2>\\n  <form class=\\\"edit-sensor-form\\\" (submit)=\\\"editSensor($event)\\\">\\n    <mat-form-field class=\\\"edit-sensor-form-width\\\">\\n      <mat-select placeholder=\\\"Chose sensor type\\\" [(ngModel)]=\\\"selectedSensorKnowledge\\\"  name=\\\"-1\\\">\\n        <mat-option *ngFor=\\\"let sensorK of sensorKnowledges\\\" [value]=\\\"sensorK.id\\\">\\n          {{ sensorK.description }}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div class=\\\"create-sensor-form-width\\\">\\n      <button mat-button>Edit</button>\\n    </div>\\n  </form>\\n</mat-dialog-content>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sensor/sheet/edit/dialogEditSensor.html\n// module id = ./src/app/sensor/sheet/edit/dialogEditSensor.html\n// module chunks = main","import { Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { User } from './user';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    addWeatherLikes(user:User, weatherId:string) {\n        const headers = new HttpHeaders()\n          .set('Content-Type', 'application/json')\n          .set('token','' +  user.token)\n          .set('weatherId','' +  weatherId);\n\n\n        return this.http.post<any>(\"http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/user/addWeatherLike/\", JSON.stringify(null), {headers})\n            .map(user => {\n                // login successful if there's a jwt token in the response\n              if (user){\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\n              }\n\n              return user;\n            });\n    }\n\n    removeWeatherLikes(user:User, weatherId:string) {\n        const headers = new HttpHeaders()\n          .set('Content-Type', 'application/json')\n          .set('token','' +  user.token)\n          .set('weatherId','' +  weatherId);\n\n\n        return this.http.delete(\"http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/user/removeWeatherLike/\", {headers})\n            .map(user => {\n                // login successful if there's a jwt token in the response\n              if (user){\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\n              }\n\n              return user;\n            });\n    }\n\n    addUnitKnowledgeUser(user:User, unitId:string) {\n        const headers = new HttpHeaders()\n          .set('Content-Type', 'application/json')\n          .set('Accept', 'application/json')\n          .set('token',  '' + user.token)\n          .set('unitId',  '' + unitId);\n\n        return this.http.post<any>('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/user/addUnitMeasure/',  JSON.stringify(null), {headers})\n            .map(user => {\n                // login successful if there's a jwt token in the response\n              if (user){\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\n              }\n\n              return user;\n            });\n    }\n\n\n    removeUnitKnowledgeUser(user:User, unitId:string) {//se id non presente nella lista dell'utente il servizio restituisce un 200 ok senza fare nulla\n        const headers = new HttpHeaders()\n          .set('Content-Type', 'application/json')\n          .set('Accept', 'application/json')\n          .set('token', '' + user.token)\n          .set('unitId', '' + unitId);\n\n        return this.http.delete('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/user/removeUnitMeasure/', {headers})\n            .map(user => {\n                // login successful if there's a jwt token in the response\n              if (user){\n                sessionStorage.setItem('currentUser', JSON.stringify(user));\n              }\n\n              return user;\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user.service.ts","module.exports = \".create-weather-station-form{\\n  min-width: 100px;\\n  max-width: 600px;\\n  width: 100%;\\n}\\n\\n.create-weather-station-width{\\n  width: 100%;\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n  text-align: center;\\n}\\n\\nagm-map {\\n  height: 300px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/weatherStation/createWeatherStation/createWeatherStation.component.css\n// module id = ./src/app/weatherStation/createWeatherStation/createWeatherStation.component.css\n// module chunks = main","module.exports = \"<mat-dialog-content class=\\\"accent-color\\\">\\n  <h1>Create new WeatherStation</h1>\\n  <form class=\\\"create-weather-station-form\\\" (submit)=\\\"createSensor($event)\\\">\\n    <div>\\n      <mat-form-field  class=\\\"create-weather-station-width\\\">\\n        <input matInput #title placeholder=\\\"The Title of your WeatherStation\\\" (keyup.enter)=\\\"addTitle(title.value)\\\" (blur)=\\\"addTitle(title.value)\\\" maxlength=\\\"50\\\">\\n      </mat-form-field>\\n      <mat-form-field  class=\\\"create-weather-station-width\\\">\\n        <input matInput placeholder=\\\"Url of Your WeatherStation's image\\\" #url (keyup.enter)=\\\"addUrl(url.value)\\\" (blur)=\\\"addUrl(url.value)\\\" maxlength=\\\"250\\\">\\n      </mat-form-field>\\n      <p  class=\\\"create-weather-station-width\\\">Drag the marker to choose the location of your weather station</p>\\n      <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\" [disableDefaultUI]=\\\"false\\\" [zoomControl]=\\\"false\\\" (mapClick)=\\\"mapClicked($event)\\\">\\n        <agm-marker (markerClick)=\\\"clickedMarker()\\\"\\n                [latitude]=\\\"lat\\\"\\n                [longitude]=\\\"lng\\\"\\n                [label]=\\\"you\\\"\\n                [markerDraggable]=\\\"true\\\"\\n                (dragEnd)=\\\"markerDragEnd($event)\\\">\\n                <agm-info-window>\\n                  <strong>Drag the marker to choose the location of your weather station</strong>\\n                </agm-info-window>\\n        </agm-marker>\\n      </agm-map>\\n\\n    </div>\\n    <div class=\\\"create-weather-station-width\\\">\\n      <button mat-button>Create</button>\\n    </div>\\n  </form>\\n</mat-dialog-content>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/weatherStation/createWeatherStation/createWeatherStation.component.html\n// module id = ./src/app/weatherStation/createWeatherStation/createWeatherStation.component.html\n// module chunks = main","/**\n * New typescript file\n */\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { WeatherStationService } from '../weather-station.service';\nimport { User } from '../../user/user';\n\n\n\n@Component({\n  selector: 'app-createWeatherStation',\n  templateUrl: 'createWeatherStation.component.html',\n  styleUrls: ['createWeatherStation.component.css'],\n  providers: [WeatherStationService]\n})\nexport class CreateWeatherStationComponent  implements OnInit {\n  private user : User;\n  zoom: number = 15;\n\n  // initial center position for the map\n  lat: number = 43.71893;\n  lng: number = 10.95459;\n  titleName = '';\n  urlImage = '';\n  you = 'You';\n\n  constructor(private weatherStationService: WeatherStationService, public dialogRef: MatDialogRef<CreateWeatherStationComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\n  }\n\n  ngOnInit() {\n    if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition((position) => {\n            this.lat = position.coords.latitude;\n            this.lng = position.coords.longitude;\n          });\n        } else {\n          this.lat = 43.71893;\n          this.lng = 10.95459;\n    }\n  }\n\n  addTitle(title:string){\n    this.titleName = title;\n  }\n\n  addUrl(url:string){\n    this.urlImage = url;\n  }\n\n  clickedMarker() {\n    console.log('clicked the marker' );\n  }\n\n  mapClicked($event: MouseEvent) {\n  }\n\n  markerDragEnd($event) {\n    this.lat = $event.coords.lat;\n    this.lng = $event.coords.lng;\n  }\n\n  createSensor(e){\n\n    console.log(this.titleName + '  ' + this.urlImage);\n\n    this.weatherStationService.createWeathrStation(this.user, this.titleName, this.urlImage, ''+this.lat, ''+this.lng)\n      .subscribe(\n        res => {\n          console.log(res);\n          this.dialogRef.close();\n        },\n        err => {\n          console.log('ERROR');\n          //openSnackBar(\"User or Password wrong\", \"undo\");\n\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/weatherStation/createWeatherStation/createWeatherStation.component.ts","module.exports = \"\\n.solution {\\n\\tpadding: 30px;\\n}\\n\\n.prefered-check{\\n\\twidth: 100%;\\n\\ttext-align: right;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/weatherStation/weather-station.css\n// module id = ./src/app/weatherStation/weather-station.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"solution\\\">\\n\\n\\t<!--------------------------------------------------------------------------------------->\\n\\t<!--<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"2rem\\\" fxLayoutAlign=\\\"center\\\"\\n\\t\\tfxLayout.xs=\\\"column\\\">\\n\\t\\t<mat-card *ngFor=\\\"let weatherStation of weatherStations; let i = index\\\" fxFlex=\\\"40%;\\\" fxFlex.xs=\\\"80%\\\">\\n\\t\\t\\t<mat-card-header>\\n\\t\\t\\t\\t<mat-card-title>{{weatherStation.description}}</mat-card-title>\\n\\t\\t\\t</mat-card-header>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t<h2>Left Card {{i}}</h2>\\n\\t\\t\\t</mat-card-content>\\n\\t\\t\\t<mat-card-actions>\\n\\t\\t\\t\\t<button mat-button (click)=\\\"openWeatherStation(weatherStation.id);\\\">Open</button>\\n\\t\\t\\t\\t<button mat-button (click)=\\\"openMap(weatherStation.longitude, weatherStation.latitude)\\\">Map</button>\\n\\t\\t\\t</mat-card-actions>\\n\\t\\t</mat-card>\\n\\n\\t</div>-->\\n\\t<div class=\\\"prefered-check\\\">\\n\\t \\t\\t<mat-checkbox *ngIf=\\\"user\\\" [(ngModel)]=\\\"checked\\\">Show favorites</mat-checkbox>\\n\\t</div>\\n\\t<div *ngFor=\\\"let weatherStation of weatherStations; let i = index\\\">\\n\\t\\t<div *ngIf=\\\"checked == false || (checked == true && isLiked(weatherStation.id)) \\\">\\n\\t\\t\\t<mat-card style=\\\"margin:10px; text-align:center;\\\">\\n\\t\\t\\t\\t<img mat-card-image src=\\\"{{weatherStation.image}}\\\" style=\\\"width:200px;\\\">\\n\\t\\t\\t\\t\\t<mat-card-content>\\n\\t\\t\\t\\t\\t\\t<p>{{weatherStation.description}}</p>\\n\\t\\t\\t\\t\\t</mat-card-content>\\n\\t\\t\\t\\t\\t<mat-card-actions>\\n\\t\\t\\t\\t\\t\\t<button mat-button (click)=\\\"openWeatherStation(weatherStation.sensors,weatherStation.id);\\\"> <i class=\\\"material-icons\\\">near_me</i> Open</button>\\n\\t\\t\\t\\t\\t\\t<button mat-button (click)=\\\"openMap(weatherStation.longitude, weatherStation.latitude)\\\"><i class=\\\"material-icons\\\">my_location</i> MAP</button>\\n\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"isLiked(weatherStation.id) else no_favorite\\\"><button mat-button *ngIf=\\\"user\\\" (click)=\\\"weatherLike(weatherStation.id,true)\\\"><i class=\\\"material-icons\\\">favorite</i>Favorite</button></span>\\n\\t\\t\\t\\t\\t\\t<ng-template #no_favorite><button mat-button *ngIf=\\\"user\\\" (click)=\\\"weatherLike(weatherStation.id,false)\\\"><i class=\\\"material-icons\\\">favorite_border</i>Favorite</button></ng-template>\\n\\t\\t\\t\\t\\t</mat-card-actions>\\n\\t\\t\\t\\t</mat-card>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/weatherStation/weather-station.html\n// module id = ./src/app/weatherStation/weather-station.html\n// module chunks = main","import { WeatherStation } from './weatherstation';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../user/user';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\n\n@Injectable()\nexport class WeatherStationService {\n  constructor(private _http: HttpClient) { }\n   getAllWeathrStation(): Observable<WeatherStation[]> {\n      const headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n\n      return this._http.get('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/weatherstation/getAll' , {headers})\n        .map((response) => <WeatherStation[]> response);\n   }\n\n   createWeathrStation(user:User, titleName:string, urlImage:string, lat: string, lng:string) {\n      const headers = new HttpHeaders()\n        .set('Content-Type', 'application/json')\n        .set('token', '' + user.token);\n\n      return this._http.post('http://localhost:8080/WeatherSt-0.0.1-SNAPSHOT/rest/1.0/weatherstation' ,\n        JSON.stringify({ longitude: lng, latitude: lat , description: titleName, image: urlImage}), {headers})\n        .map((response) => <WeatherStation> response);\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/weatherStation/weather-station.service.ts","/**\r\n * New typescript file\r\n */\r\nimport { WeatherStationService } from './weather-station.service';\r\nimport { WeatherStation } from './weatherstation';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { User } from '../user/user';\r\nimport { Http , Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport { Router } from '@angular/router';\r\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material';\r\nimport {DialogMaps} from '../dialog/maps/dialog.maps.component';\r\nimport { UserService } from '../user/user.service';\r\n\r\n\r\n@Component ({\r\n   selector: 'app-weatherstation',\r\n   templateUrl: 'weather-station.html',\r\n   styleUrls: ['weather-station.css'],\r\n   providers: [WeatherStationService,UserService]\r\n})\r\nexport class WeatherStationComponent {\r\n    status = true;\r\n    public user : User;\r\n    public weatherLikes = [];\r\n    checked = false;\r\n\r\n    weatherStations: WeatherStation[];\r\n    constructor(private _weatherStation: WeatherStationService,private _user: UserService, public dialog: MatDialog, private router: Router) {\r\n      if(sessionStorage.getItem(\"currentUser\")){\r\n        this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n        this.weatherLikes = this.user.weatherLikes;\r\n      }\r\n    }\r\n    ngOnInit(): void {\r\n\r\n      this._weatherStation.getAllWeathrStation()\r\n        .subscribe(weatherStations => this.weatherStations = weatherStations);\r\n    }\r\n    openWeatherStation(sensorsId: number[], weatherId: string) {\r\n      sessionStorage.setItem('currentWeatherSelected', weatherId);\r\n      sessionStorage.setItem('currentSensorSelected', JSON.stringify(sensorsId));\r\n\r\n      this.router.navigate(['/sensor','']);\r\n    }\r\n    openMap(longitude: string, latitude: string) {\r\n       this.dialog.open(DialogMaps, {\r\n        data: {\r\n          lat: latitude,\r\n          lng: longitude\r\n        }\r\n      });\r\n     }\r\n\r\n     isLiked(weatherId){\r\n       for(const i of this.weatherLikes){\r\n         if(i == weatherId){\r\n           return true;\r\n         }\r\n       }\r\n       return false;\r\n     }\r\n\r\n     weatherLike(weatherId, isLiked:boolean){\r\n       if(!isLiked){\r\n          this._user.addWeatherLikes(this.user, weatherId)\r\n            .subscribe(\r\n                res => {\r\n                  this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n\r\n                  this.weatherLikes = this.user.weatherLikes;\r\n               },\r\n                 err => {\r\n                   console.log(err);\r\n                 });\r\n        }else{\r\n          this._user.removeWeatherLikes(this.user, weatherId)\r\n            .subscribe(\r\n                res => {\r\n                  this.user = JSON.parse(sessionStorage.getItem(\"currentUser\"));\r\n\r\n                  this.weatherLikes = this.user.weatherLikes;\r\n               },\r\n                 err => {\r\n                   console.log(err);\r\n                 });\r\n        }\r\n     }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/weatherStation/weatherStation.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}